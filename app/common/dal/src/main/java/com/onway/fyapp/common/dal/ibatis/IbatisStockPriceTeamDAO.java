/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.StockPriceTeamDAO;

import com.onway.fyapp.common.dal.dataobject.StockPriceTeamDO;
import java.util.List;
import org.springframework.dao.DataAccessException;

import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.StockPriceTeamDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_stock_price_team.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisStockPriceTeamDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisStockPriceTeamDAO extends SqlMapClientDaoSupport implements StockPriceTeamDAO {
	/**
	 *  Query DB table <tt>hqyt_stock_price_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_stock_price_team_copy</tt>
	 *
	 *	@return List<StockPriceTeamDO>
	 *	@throws DataAccessException
	 */	 
    public  List<StockPriceTeamDO>   queryAll() throws DataAccessException {


        return getSqlMapClientTemplate().queryForList("MS-STOCK-PRICE-TEAM-QUERY-ALL", null);

    }

	/**
	 *  Delete records from DB table <tt>hqyt_stock_price_team</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete hqyt_stock_price_team_copy</tt>
	 *
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   deleteAll() throws DataAccessException {

        return getSqlMapClientTemplate().delete("MS-STOCK-PRICE-TEAM-DELETE-ALL", null);
    }

	/**
	 *  Insert one <tt>StockPriceTeamDO</tt> object to DB table <tt>hqyt_stock_price_team</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into hqyt_stock_price_team_copy(STOCK_ID,TEAM_ID,STOCK,GMT_CREATE,GMT_MODIFIED) values (?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param stockPriceTeam
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   insert(StockPriceTeamDO stockPriceTeam) throws DataAccessException {
    	if (stockPriceTeam == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-STOCK-PRICE-TEAM-INSERT", stockPriceTeam);

        return stockPriceTeam.getId();
    }

	/**
	 *  Query DB table <tt>hqyt_stock_price_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_stock_price_team_copy</tt>
	 *
	 *	@param stockPriceId
	 *	@param teamId
	 *	@return StockPriceTeamDO
	 *	@throws DataAccessException
	 */	 
    public  StockPriceTeamDO   queryByIdAndTeamId(Integer stockPriceId, String teamId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("stockPriceId", stockPriceId);
        param.put("teamId", teamId);

	        return (StockPriceTeamDO) getSqlMapClientTemplate().queryForObject("MS-STOCK-PRICE-TEAM-QUERY-BY-ID-AND-TEAM-ID", param);
		
    }

	/**
	 *  Update DB table <tt>hqyt_stock_price_team</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_stock_price_team_copy set STOCK=?, GMT_MODIFIED=CURRENT_TIMESTAMP where ((STOCK_ID = ?) AND (TEAM_ID = ?))</tt>
	 *
	 *	@param stockPriceTeam
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   update(StockPriceTeamDO stockPriceTeam) throws DataAccessException {
    	if (stockPriceTeam == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-STOCK-PRICE-TEAM-UPDATE", stockPriceTeam);
    }

	/**
	 *  Delete records from DB table <tt>hqyt_stock_price_team</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from hqyt_stock_price_team_copy where (ID = 0)</tt>
	 *
	 *	@param isTop
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   deleteAllByIstop(String isTop) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("isTop", isTop);

        return getSqlMapClientTemplate().delete("MS-STOCK-PRICE-TEAM-DELETE-ALL-BY-ISTOP", param);
    }

}