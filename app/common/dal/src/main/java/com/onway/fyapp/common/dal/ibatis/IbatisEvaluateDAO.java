/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.EvaluateDAO;

import java.util.Date;
import com.onway.fyapp.common.dal.dataobject.EvaluateDO;
import java.util.List;
import org.springframework.dao.DataAccessException;

import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.EvaluateDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_evaluate.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisEvaluateDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisEvaluateDAO extends SqlMapClientDaoSupport implements EvaluateDAO {
	/**
	 *  Query DB table <tt>hqyt_evaluate</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_evaluate</tt>
	 *
	 *	@param linkid
	 *	@param startDate
	 *	@param endDate
	 *	@param offset
	 *	@param limit
	 *	@return List<EvaluateDO>
	 *	@throws DataAccessException
	 */	 
    public  List<EvaluateDO>   selectevaluate(String linkid, Date startDate, Date endDate, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("linkid", linkid);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-EVALUATE-SELECTEVALUATE", param);

    }

	/**
	 *  Query DB table <tt>hqyt_evaluate</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_evaluate</tt>
	 *
	 *	@param linkid
	 *	@param startDate
	 *	@param endDate
	 *	@param offset
	 *	@param limit
	 *	@return List<EvaluateDO>
	 *	@throws DataAccessException
	 */	 
    public  List<EvaluateDO>   selectep(String linkid, Date startDate, Date endDate, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("linkid", linkid);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-EVALUATE-SELECTEP", param);

    }

	/**
	 *  Update DB table <tt>hqyt_evaluate</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_evaluate set DEL_FLG='1', GMT_MODIFIED=CURRENT_TIMESTAMP where (ID = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   deletepl(int id) throws DataAccessException {
        Integer param = new Integer(id);

        return getSqlMapClientTemplate().update("MS-EVALUATE-DELETEPL", param);
    }

	/**
	 *  Update DB table <tt>hqyt_evaluate</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_evaluate set IS_BEST=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (ID = ?)</tt>
	 *
	 *	@param isBest
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   upodatepl(String isBest, int id) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("isBest", isBest);
        param.put("id", new Integer(id));

        return getSqlMapClientTemplate().update("MS-EVALUATE-UPODATEPL", param);
    }

}