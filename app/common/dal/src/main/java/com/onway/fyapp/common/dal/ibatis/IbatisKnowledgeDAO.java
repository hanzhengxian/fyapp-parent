/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.KnowledgeDAO;

import com.onway.fyapp.common.dal.dataobject.KnowledgeDO;
import java.util.List;
import org.springframework.dao.DataAccessException;
import java.util.HashMap;

import java.util.Map;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.KnowledgeDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_knowledge.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisKnowledgeDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisKnowledgeDAO extends SqlMapClientDaoSupport implements KnowledgeDAO {
	/**
	 *  Query DB table <tt>hqyt_knowledge</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_knowledge where (1 = 1)</tt>
	 *
	 *	@param type
	 *	@param title
	 *	@param delFlg
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   selectKnowledge(String type, String title, String delFlg, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("type", type);
        param.put("title", title);
        param.put("delFlg", delFlg);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-KNOWLEDGE-SELECT-KNOWLEDGE", param);

    }

	/**
	 *  Insert one <tt>KnowledgeDO</tt> object to DB table <tt>hqyt_knowledge</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into hqyt_knowledge(KNOW_ID,TYPE,TITLE,SUB_TITLE,CONTENT,HEAD_IMG_URL,PRAISE_COUNT,COMMENT_COUNT,DEL_FLG,GMT_CREATE,GMT_MODIFIED,CREATER,MODIFIER) values (?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CREATER, MODIFIER)</tt>
	 *
	 *	@param knowledge
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   insertKnowledge(KnowledgeDO knowledge) throws DataAccessException {
    	if (knowledge == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-KNOWLEDGE-INSERT-KNOWLEDGE", knowledge);

        return knowledge.getId();
    }

	/**
	 *  Update DB table <tt>hqyt_knowledge</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_knowledge set TYPE=?, TITLE=?, SUB_TITLE=?, CONTENT=?, HEAD_IMG_URL=?, MODIFIER=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (KNOW_ID = ?)</tt>
	 *
	 *	@param type
	 *	@param title
	 *	@param subTitle
	 *	@param content
	 *	@param headImgUrl
	 *	@param modifier
	 *	@param knowId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateKnowledge(String type, String title, String subTitle, String content, String headImgUrl, String modifier, String knowId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("type", type);
        param.put("title", title);
        param.put("subTitle", subTitle);
        param.put("content", content);
        param.put("headImgUrl", headImgUrl);
        param.put("modifier", modifier);
        param.put("knowId", knowId);

        return getSqlMapClientTemplate().update("MS-KNOWLEDGE-UPDATE-KNOWLEDGE", param);
    }

	/**
	 *  Update DB table <tt>hqyt_knowledge</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_knowledge set DEL_FLG=?, MODIFIER=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (KNOW_ID = ?)</tt>
	 *
	 *	@param delFlg
	 *	@param modifier
	 *	@param knowId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   deleteKnowledge(String delFlg, String modifier, String knowId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("delFlg", delFlg);
        param.put("modifier", modifier);
        param.put("knowId", knowId);

        return getSqlMapClientTemplate().update("MS-KNOWLEDGE-DELETE-KNOWLEDGE", param);
    }

	/**
	 *  Query DB table <tt>hqyt_knowledge</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_knowledge</tt>
	 *
	 *	@param type
	 *	@param title
	 *	@param delFlg
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   selectKnowledgeCount(String type, String title, String delFlg) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("type", type);
        param.put("title", title);
        param.put("delFlg", delFlg);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-KNOWLEDGE-SELECT-KNOWLEDGE-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

}