/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.daointerface;

import com.onway.fyapp.common.dal.dataobject.SProvinceDO;
import java.util.List;
import org.springframework.dao.DataAccessException;
import com.onway.common.lang.Money;
import java.util.Map;

/**
 * A dao interface provides methods to access database table <tt>s_provinces</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/s_provinces.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: SProvinceDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public interface SProvinceDAO {
	/**
	 *  Query DB table <tt>s_provinces</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from s_provinces</tt>
	 *
	 *	@param cityName
	 *	@param isUse
	 *	@param depth
	 *	@param offset
	 *	@param limit
	 *	@return List<SProvinceDO>
	 *	@throws DataAccessException
	 */	 
    public  List<SProvinceDO>   queryAll(String cityName, String isUse, String depth, Integer offset, Integer limit) throws DataAccessException;

	/**
	 *  Query DB table <tt>s_provinces</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from s_provinces</tt>
	 *
	 *	@param cityName
	 *	@param isUse
	 *	@param depth
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   queryAllCount(String cityName, String isUse, String depth) throws DataAccessException;

	/**
	 *  Update DB table <tt>s_provinces</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update s_provinces set isUse=? where (id = ?)</tt>
	 *
	 *	@param SProvince
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateCanUse(SProvinceDO SProvince) throws DataAccessException;

	/**
	 *  Update DB table <tt>s_provinces</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update s_provinces set postage=?, free_postage=? where (id = ?)</tt>
	 *
	 *	@param SProvince
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updatePostage(SProvinceDO SProvince) throws DataAccessException;

	/**
	 *  Query DB table <tt>s_provinces</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from s_provinces</tt>
	 *
	 *	@param cityName
	 *	@param isUse
	 *	@param depth
	 *	@param hasChooseForDiscount
	 *	@param linkProvinces
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   queryAllProDiscount(String cityName, String isUse, String depth, String hasChooseForDiscount, List linkProvinces, Integer offset, Integer limit) throws DataAccessException;

	/**
	 *  Query DB table <tt>s_provinces</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from s_provinces</tt>
	 *
	 *	@param cityName
	 *	@param isUse
	 *	@param depth
	 *	@param hasChooseForDiscount
	 *	@param linkProvinces
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   queryAllProDiscountCount(String cityName, String isUse, String depth, String hasChooseForDiscount, List linkProvinces) throws DataAccessException;

	/**
	 *  Query DB table <tt>s_provinces</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from s_provinces</tt>
	 *
	 *	@param parentId
	 *	@param isUse
	 *	@param depth
	 *	@param hasChooseForDiscount
	 *	@param linkProvinces
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   queryAllCityDiscount(String parentId, String isUse, String depth, String hasChooseForDiscount, List linkProvinces, Integer offset, Integer limit) throws DataAccessException;

	/**
	 *  Query DB table <tt>s_provinces</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from s_provinces</tt>
	 *
	 *	@param parentId
	 *	@param isUse
	 *	@param depth
	 *	@param hasChooseForDiscount
	 *	@param linkProvinces
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   queryAllCityDiscountCount(String parentId, String isUse, String depth, String hasChooseForDiscount, List linkProvinces) throws DataAccessException;

	/**
	 *  Query DB table <tt>s_provinces</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from s_provinces</tt>
	 *
	 *	@param isUse
	 *	@param linkCitys
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 
    public  List<String>   queryAllProDisByCitys(String isUse, List linkCitys) throws DataAccessException;

	/**
	 *  Query DB table <tt>s_provinces</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from s_provinces</tt>
	 *
	 *	@param provinceName
	 *	@param isUse
	 *	@param depth
	 *	@return SProvinceDO
	 *	@throws DataAccessException
	 */	 
    public  SProvinceDO   queryByProvinceName(String provinceName, String isUse, String depth) throws DataAccessException;

	/**
	 *  Query DB table <tt>s_provinces</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from s_provinces</tt>
	 *
	 *	@param parentId
	 *	@param isUse
	 *	@param offset
	 *	@param limit
	 *	@return List<SProvinceDO>
	 *	@throws DataAccessException
	 */	 
    public  List<SProvinceDO>   queryAllCityByParentId(String parentId, String isUse, Integer offset, Integer limit) throws DataAccessException;

	/**
	 *  Query DB table <tt>s_provinces</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from s_provinces</tt>
	 *
	 *	@param id
	 *	@return SProvinceDO
	 *	@throws DataAccessException
	 */	 
    public  SProvinceDO   queryCityById(String id) throws DataAccessException;

	/**
	 *  Query DB table <tt>s_provinces</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from s_provinces</tt>
	 *
	 *	@param parentId
	 *	@param isUse
	 *	@param offset
	 *	@param limit
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 
    public  List<String>   queryAllCityNameByParentId(String parentId, String isUse, Integer offset, Integer limit) throws DataAccessException;

	/**
	 *  Query DB table <tt>s_provinces</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from s_provinces</tt>
	 *
	 *	@param parentIds
	 *	@param isUse
	 *	@param depth
	 *	@param offset
	 *	@param limit
	 *	@return List<SProvinceDO>
	 *	@throws DataAccessException
	 */	 
    public  List<SProvinceDO>   queryAllCityByParentIdS(List parentIds, String isUse, String depth, Integer offset, Integer limit) throws DataAccessException;

	/**
	 *  Query DB table <tt>s_provinces</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select shortName from s_provinces</tt>
	 *
	 *	@param ids
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 
    public  List<String>   queryCityByIdS(List ids) throws DataAccessException;

}