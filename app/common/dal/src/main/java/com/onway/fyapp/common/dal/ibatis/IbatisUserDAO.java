/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.UserDAO;

import java.util.Date;
import com.onway.fyapp.common.dal.dataobject.UserDO;
import java.util.List;
import org.springframework.dao.DataAccessException;
import java.util.HashMap;

import java.util.Map;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.UserDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_user.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisUserDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisUserDAO extends SqlMapClientDaoSupport implements UserDAO {
	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_user where (1 = 1)</tt>
	 *
	 *	@param nickName
	 *	@param realName
	 *	@param cell
	 *	@param sex
	 *	@param userLevel
	 *	@param delFlg
	 *	@param startDate
	 *	@param endDate
	 *	@param recommendUserCell
	 *	@param userId
	 *	@param recommendUserId
	 *	@param recommendNickName
	 *	@param recommendRealName
	 *	@param erpNo
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   selectUserList(String nickName, String realName, String cell, String sex, String userLevel, String delFlg, Date startDate, Date endDate, String recommendUserCell, String userId, String recommendUserId, String recommendNickName, String recommendRealName, String erpNo, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("nickName", nickName);
        param.put("realName", realName);
        param.put("cell", cell);
        param.put("sex", sex);
        param.put("userLevel", userLevel);
        param.put("delFlg", delFlg);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("recommendUserCell", recommendUserCell);
        param.put("userId", userId);
        param.put("recommendUserId", recommendUserId);
        param.put("recommendNickName", recommendNickName);
        param.put("recommendRealName", recommendRealName);
        param.put("erpNo", erpNo);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-USER-SELECT-USER-LIST", param);

    }

	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_user</tt>
	 *
	 *	@param nickName
	 *	@param realName
	 *	@param cell
	 *	@param sex
	 *	@param userLevel
	 *	@param delFlg
	 *	@param startDate
	 *	@param endDate
	 *	@param recommendUserCell
	 *	@param userId
	 *	@param recommendUserId
	 *	@param recommendNickName
	 *	@param recommendRealName
	 *	@param erpNo
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   queryListCount(String nickName, String realName, String cell, String sex, String userLevel, String delFlg, Date startDate, Date endDate, String recommendUserCell, String userId, String recommendUserId, String recommendNickName, String recommendRealName, String erpNo) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("nickName", nickName);
        param.put("realName", realName);
        param.put("cell", cell);
        param.put("sex", sex);
        param.put("userLevel", userLevel);
        param.put("delFlg", delFlg);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("recommendUserCell", recommendUserCell);
        param.put("userId", userId);
        param.put("recommendUserId", recommendUserId);
        param.put("recommendNickName", recommendNickName);
        param.put("recommendRealName", recommendRealName);
        param.put("erpNo", erpNo);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-USER-QUERY-LIST-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_user where (USER_ID = ?)</tt>
	 *
	 *	@param userId
	 *	@return UserDO
	 *	@throws DataAccessException
	 */	 
    public  UserDO   selectByUserId(String userId) throws DataAccessException {

 
	        return (UserDO) getSqlMapClientTemplate().queryForObject("MS-USER-SELECT-BY-USER-ID", userId);
		
    }

	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_user where (USER_ID = ?)</tt>
	 *
	 *	@param userId
	 *	@return UserDO
	 *	@throws DataAccessException
	 */	 
    public  UserDO   finduserbyid(String userId) throws DataAccessException {

 
	        return (UserDO) getSqlMapClientTemplate().queryForObject("MS-USER-FINDUSERBYID", userId);
		
    }

	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_user where (1 = 1)</tt>
	 *
	 *	@param fnickName
	 *	@param fcell
	 *	@param frealName
	 *	@param offset
	 *	@param limit
	 *	@return List<UserDO>
	 *	@throws DataAccessException
	 */	 
    public  List<UserDO>   findteamuser(String fnickName, String fcell, String frealName, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("fnickName", fnickName);
        param.put("fcell", fcell);
        param.put("frealName", frealName);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-USER-FINDTEAMUSER", param);

    }

	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_user where (1 = 1)</tt>
	 *
	 *	@param fnickName
	 *	@param fcell
	 *	@param frealName
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   findteamuserCount(String fnickName, String fcell, String frealName) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("fnickName", fnickName);
        param.put("fcell", fcell);
        param.put("frealName", frealName);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-USER-FINDTEAMUSER-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_user</tt>
	 *
	 *	@param teamId
	 *	@param fnickName
	 *	@param fcell
	 *	@param froleType
	 *	@param frealName
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   finduserbyteamid(String teamId, String fnickName, String fcell, String froleType, String frealName, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamId", teamId);
        param.put("fnickName", fnickName);
        param.put("fcell", fcell);
        param.put("froleType", froleType);
        param.put("frealName", frealName);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-USER-FINDUSERBYTEAMID", param);

    }

	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_user</tt>
	 *
	 *	@param teamId
	 *	@param fnickName
	 *	@param fcell
	 *	@param froleType
	 *	@param frealName
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   finduserbyteamidCount(String teamId, String fnickName, String fcell, String froleType, String frealName) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamId", teamId);
        param.put("fnickName", fnickName);
        param.put("fcell", fcell);
        param.put("froleType", froleType);
        param.put("frealName", frealName);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-USER-FINDUSERBYTEAMID-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_user where (1 = 1)</tt>
	 *
	 *	@param offset
	 *	@param limit
	 *	@return List<UserDO>
	 *	@throws DataAccessException
	 */	 
    public  List<UserDO>   queryAllUser(int offset, int limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("offset", new Integer(offset));
        param.put("limit", new Integer(limit));

        return getSqlMapClientTemplate().queryForList("MS-USER-QUERY-ALL-USER", param);

    }

	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_user</tt>
	 *
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   queryAllUserCount() throws DataAccessException {


	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-USER-QUERY-ALL-USER-COUNT", null);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Update DB table <tt>hqyt_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_user set USER_LEVEL=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param userLevel
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateUserLevel(int userLevel, String userId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("userLevel", new Integer(userLevel));
        param.put("userId", userId);

        return getSqlMapClientTemplate().update("MS-USER-UPDATE-USER-LEVEL", param);
    }

	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_user where (CELL = ?)</tt>
	 *
	 *	@param cell
	 *	@return UserDO
	 *	@throws DataAccessException
	 */	 
    public  UserDO   selectByUserCell(String cell) throws DataAccessException {

 
	        return (UserDO) getSqlMapClientTemplate().queryForObject("MS-USER-SELECT-BY-USER-CELL", cell);
		
    }

	/**
	 *  Update DB table <tt>hqyt_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_user set DEL_FLG=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param delFlg
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   modifyUserStatus(String delFlg, String userId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("delFlg", delFlg);
        param.put("userId", userId);

        return getSqlMapClientTemplate().update("MS-USER-MODIFY-USER-STATUS", param);
    }

	/**
	 *  Query DB table <tt>hqyt_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_user</tt>
	 *
	 *	@param userId
	 *	@param openId
	 *	@return UserDO
	 *	@throws DataAccessException
	 */	 
    public  UserDO   searchByUserIdOrOpenId(String userId, String openId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("openId", openId);

	        return (UserDO) getSqlMapClientTemplate().queryForObject("MS-USER-SEARCH-BY-USER-ID-OR-OPEN-ID", param);
		
    }

	/**
	 *  Update DB table <tt>hqyt_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_user set REAL_NAME=?, ERP_NO=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param user
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateUserRealName(UserDO user) throws DataAccessException {
    	if (user == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-USER-UPDATE-USER-REAL-NAME", user);
    }

}