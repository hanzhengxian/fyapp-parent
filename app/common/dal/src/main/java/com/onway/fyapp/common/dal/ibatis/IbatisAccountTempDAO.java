/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.AccountTempDAO;

import com.onway.fyapp.common.dal.dataobject.AccountTempDO;
import org.springframework.dao.DataAccessException;

import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.AccountTempDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_account_temp.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisAccountTempDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisAccountTempDAO extends SqlMapClientDaoSupport implements AccountTempDAO {
	/**
	 *  Query DB table <tt>hqyt_account_temp</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_account_temp</tt>
	 *
	 *	@param linkId
	 *	@param type
	 *	@param temType
	 *	@param delFlg
	 *	@return AccountTempDO
	 *	@throws DataAccessException
	 */	 
    public  AccountTempDO   searchByLinkId(String linkId, String type, String temType, String delFlg) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("linkId", linkId);
        param.put("type", type);
        param.put("temType", temType);
        param.put("delFlg", delFlg);

	        return (AccountTempDO) getSqlMapClientTemplate().queryForObject("MS-ACCOUNT-TEMP-SEARCH-BY-LINK-ID", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_account_temp</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_account_temp</tt>
	 *
	 *	@param id
	 *	@return AccountTempDO
	 *	@throws DataAccessException
	 */	 
    public  AccountTempDO   queryById(Integer id) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("id", id);

	        return (AccountTempDO) getSqlMapClientTemplate().queryForObject("MS-ACCOUNT-TEMP-QUERY-BY-ID", param);
		
    }

	/**
	 *  Update DB table <tt>hqyt_account_temp</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_account_temp set AMOUNT=?, END_DATE=?, GMT_MODIFIED=CURRENT_TIMESTAMP where ((LINK_ID = ?) AND (TYPE = ?) AND (TEMP_TYPE = ?))</tt>
	 *
	 *	@param accountTemp
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateTemp(AccountTempDO accountTemp) throws DataAccessException {
    	if (accountTemp == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-ACCOUNT-TEMP-UPDATE-TEMP", accountTemp);
    }

	/**
	 *  Insert one <tt>AccountTempDO</tt> object to DB table <tt>hqyt_account_temp</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into hqyt_account_temp(LINK_ID,TYPE,TEMP_TYPE,AMOUNT,START_DATE,END_DATE,DEL_FLG,GMT_CREATE,GMT_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param accountTemp
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   creatTemp(AccountTempDO accountTemp) throws DataAccessException {
    	if (accountTemp == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-ACCOUNT-TEMP-CREAT-TEMP", accountTemp);

        return accountTemp.getId();
    }

}