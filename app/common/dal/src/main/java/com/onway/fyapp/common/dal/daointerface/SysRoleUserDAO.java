/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.daointerface;

import com.onway.fyapp.common.dal.dataobject.SysRoleUserDO;
import java.util.HashMap;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Date;
import java.util.Map;

/**
 * A dao interface provides methods to access database table <tt>sys_role_user</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/sys_role_user.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: SysRoleUserDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public interface SysRoleUserDAO {
	/**
	 *  Query DB table <tt>sys_role_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from sys_role_user</tt>
	 *
	 *	@param username
	 *	@param password
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public  Map<String,Object>  login(String username, String password) throws DataAccessException;

	/**
	 *  Query DB table <tt>sys_role_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from sys_role_user</tt>
	 *
	 *	@param username
	 *	@param offset
	 *	@param limit
	 *	@return List< Map<String,Object> >
	 *	@throws DataAccessException
	 */	 
    public  List< Map<String,Object> >   selectalladminuser(String username, Integer offset, Integer limit) throws DataAccessException;

	/**
	 *  Query DB table <tt>sys_role_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(*) from sys_role_user</tt>
	 *
	 *	@param username
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   selectalladminusercount(String username) throws DataAccessException;

	/**
	 *  Insert one <tt>SysRoleUserDO</tt> object to DB table <tt>sys_role_user</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into sys_role_user(USER_ID,USERNAME,PASSWORD,ROLE_ID,REAL_NAME,CREATER,GMT_CREATE) values (?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param sysRoleUser
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   addadminuser(SysRoleUserDO sysRoleUser) throws DataAccessException;

	/**
	 *  Update DB table <tt>sys_role_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update sys_role_user set USERNAME=?, REAL_NAME=?, ROLE_ID=?, MODIFIER=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (id = ?)</tt>
	 *
	 *	@param username
	 *	@param realName
	 *	@param roleId
	 *	@param modifier
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateadminuser(String username, String realName, String roleId, String modifier, int id) throws DataAccessException;

	/**
	 *  Update DB table <tt>sys_role_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update sys_role_user set PASSWORD=?, MODIFIER=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param password
	 *	@param modifier
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updatepassword(String password, String modifier, String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>sys_role_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select password from sys_role_user where (USER_ID = ?)</tt>
	 *
	 *	@param userId
	 *	@return String
	 *	@throws DataAccessException
	 */	 
    public  String   selectpassword(String userId) throws DataAccessException;

	/**
	 *  Update DB table <tt>sys_role_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update sys_role_user set DEL_FLG='1', MODIFIER=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (ID = ?)</tt>
	 *
	 *	@param modifier
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   deleteSysUser(String modifier, int id) throws DataAccessException;

	/**
	 *  Query DB table <tt>sys_role_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from sys_role_user where (USERNAME = ?)</tt>
	 *
	 *	@param username
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   queryCountSysUserByUserName(String username) throws DataAccessException;

}