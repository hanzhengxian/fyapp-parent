/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.ProductTeamDAO;

import com.onway.fyapp.common.dal.dataobject.ProductTeamDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.HashMap;

import java.util.Map;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.ProductTeamDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_product_team.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisProductTeamDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisProductTeamDAO extends SqlMapClientDaoSupport implements ProductTeamDAO {
	/**
	 *  Insert one <tt>ProductTeamDO</tt> object to DB table <tt>hqyt_product_team</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into hqyt_product_team(PRODUCT_ID,TEAM_ID,GMT_CREATE,GMT_MODIFIED) values (?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param productTeam
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   insert(ProductTeamDO productTeam) throws DataAccessException {
    	if (productTeam == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-PRODUCT-TEAM-INSERT", productTeam);

        return productTeam.getId();
    }

	/**
	 *  Query DB table <tt>hqyt_product_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_product_team</tt>
	 *
	 *	@param productId
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   selectByPage(String productId, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("productId", productId);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-PRODUCT-TEAM-SELECT-BY-PAGE", param);

    }

	/**
	 *  Query DB table <tt>hqyt_product_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from hqyt_product_team</tt>
	 *
	 *	@param productId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   selectCountByPage(String productId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("productId", productId);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-PRODUCT-TEAM-SELECT-COUNT-BY-PAGE", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_product_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select ID, PRODUCT_ID, TEAM_ID, GMT_CREATE, GMT_MODIFIED from hqyt_product_team where ((1 = 1) AND (PRODUCT_ID = ?) AND (TEAM_ID = ?))</tt>
	 *
	 *	@param productId
	 *	@param teamId
	 *	@return ProductTeamDO
	 *	@throws DataAccessException
	 */	 
    public  ProductTeamDO   selectByProdIdATeamId(String productId, String teamId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("productId", productId);
        param.put("teamId", teamId);

	        return (ProductTeamDO) getSqlMapClientTemplate().queryForObject("MS-PRODUCT-TEAM-SELECT-BY-PROD-ID-A-TEAM-ID", param);
		
    }

	/**
	 *  Delete records from DB table <tt>hqyt_product_team</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from hqyt_product_team where ((TEAM_ID = ?) AND (PRODUCT_ID = ?))</tt>
	 *
	 *	@param teamId
	 *	@param productId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   deleteByTeamIdAndProdId(String teamId, String productId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamId", teamId);
        param.put("productId", productId);

        return getSqlMapClientTemplate().delete("MS-PRODUCT-TEAM-DELETE-BY-TEAM-ID-AND-PROD-ID", param);
    }

	/**
	 *  Query DB table <tt>hqyt_product_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_product_team where ((1 = 1) AND (PRODUCT_ID = ?))</tt>
	 *
	 *	@param productId
	 *	@return ProductTeamDO
	 *	@throws DataAccessException
	 */	 
    public  ProductTeamDO   checkByProdId(String productId) throws DataAccessException {

 
	        return (ProductTeamDO) getSqlMapClientTemplate().queryForObject("MS-PRODUCT-TEAM-CHECK-BY-PROD-ID", productId);
		
    }

	/**
	 *  Query DB table <tt>hqyt_product_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from hqyt_product_team where (TEAM_ID = ?)</tt>
	 *
	 *	@param teamId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   queryCountGoodsByTeamId(String teamId) throws DataAccessException {

 
	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-PRODUCT-TEAM-QUERY-COUNT-GOODS-BY-TEAM-ID", teamId);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_product_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from hqyt_product_team where ((TEAM_ID = ?) AND (PRODUCT_ID = ?))</tt>
	 *
	 *	@param teamId
	 *	@param productId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   queryCountByTeamIdAndProductId(String teamId, String productId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamId", teamId);
        param.put("productId", productId);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-PRODUCT-TEAM-QUERY-COUNT-BY-TEAM-ID-AND-PRODUCT-ID", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Delete records from DB table <tt>hqyt_product_team</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from hqyt_product_team where (PRODUCT_ID = ?)</tt>
	 *
	 *	@param productId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   cleanALlProLink(String productId) throws DataAccessException {

        return getSqlMapClientTemplate().delete("MS-PRODUCT-TEAM-CLEAN-A-LL-PRO-LINK", productId);
    }

}