/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.CategoryDAO;

import com.onway.fyapp.common.dal.dataobject.CategoryDO;
import java.util.List;
import org.springframework.dao.DataAccessException;

import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.CategoryDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_category.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisCategoryDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisCategoryDAO extends SqlMapClientDaoSupport implements CategoryDAO {
	/**
	 *  Query DB table <tt>hqyt_category</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_category</tt>
	 *
	 *	@param topId
	 *	@param offset
	 *	@param limit
	 *	@return List<CategoryDO>
	 *	@throws DataAccessException
	 */	 
    public  List<CategoryDO>   selectByTopId(Integer topId, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("topId", topId);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-CATEGORY-SELECT-BY-TOP-ID", param);

    }

	/**
	 *  Query DB table <tt>hqyt_category</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_category where (TOP_ID = ?)</tt>
	 *
	 *	@param topId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   selectByTopIdCount(int topId) throws DataAccessException {

        Integer param = new Integer(topId);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-CATEGORY-SELECT-BY-TOP-ID-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Delete records from DB table <tt>hqyt_category</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from hqyt_category where (ID = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   deleteCate(int id) throws DataAccessException {
        Integer param = new Integer(id);

        return getSqlMapClientTemplate().delete("MS-CATEGORY-DELETE-CATE", param);
    }

	/**
	 *  Update DB table <tt>hqyt_category</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_category set TOP_ID=?, CATEGORY_NAME=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (ID = ?)</tt>
	 *
	 *	@param category
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateCate(CategoryDO category) throws DataAccessException {
    	if (category == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-CATEGORY-UPDATE-CATE", category);
    }

	/**
	 *  Insert one <tt>CategoryDO</tt> object to DB table <tt>hqyt_category</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into hqyt_category(TOP_ID,CATEGORY_NAME,GMT_CREATE,GMT_MODIFIED) values (?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param category
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   newCate(CategoryDO category) throws DataAccessException {
    	if (category == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-CATEGORY-NEW-CATE", category);

        return category.getId();
    }

	/**
	 *  Query DB table <tt>hqyt_category</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select ID, TOP_ID, CATEGORY_NAME, RANK, GMT_CREATE, GMT_MODIFIED from hqyt_category where (ID = ?)</tt>
	 *
	 *	@param id
	 *	@return CategoryDO
	 *	@throws DataAccessException
	 */	 
    public  CategoryDO   selectById(int id) throws DataAccessException {

        Integer param = new Integer(id);

	        return (CategoryDO) getSqlMapClientTemplate().queryForObject("MS-CATEGORY-SELECT-BY-ID", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_category</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_category</tt>
	 *
	 *	@param topIds
	 *	@return List<CategoryDO>
	 *	@throws DataAccessException
	 */	 
    public  List<CategoryDO>   queryChildCategoryByTopIdS(List topIds) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("topIds", topIds);

        return getSqlMapClientTemplate().queryForList("MS-CATEGORY-QUERY-CHILD-CATEGORY-BY-TOP-ID-S", param);

    }

	/**
	 *  Query DB table <tt>hqyt_category</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_category</tt>
	 *
	 *	@param topId
	 *	@return List<CategoryDO>
	 *	@throws DataAccessException
	 */	 
    public  List<CategoryDO>   searchByTopId(Integer topId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("topId", topId);

        return getSqlMapClientTemplate().queryForList("MS-CATEGORY-SEARCH-BY-TOP-ID", param);

    }

}