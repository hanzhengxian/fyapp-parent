/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.ImgDAO;

import com.onway.fyapp.common.dal.dataobject.ImgDO;
import org.springframework.dao.DataAccessException;

import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.ImgDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_img.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisImgDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisImgDAO extends SqlMapClientDaoSupport implements ImgDAO {
	/**
	 *  Insert one <tt>ImgDO</tt> object to DB table <tt>hqyt_img</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into hqyt_img(IMG_ID,IMG_TYPE,IMG_FLG,IMG_URL,USER_ID,DEL_FLG,GMT_CREATE,GMT_MODIFIED) values (?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param img
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   insert(ImgDO img) throws DataAccessException {
    	if (img == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-IMG-INSERT", img);

        return img.getId();
    }

	/**
	 *  Update DB table <tt>hqyt_img</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_img set IMG_TYPE=?, IMG_URL=?, USER_ID=?, DEL_FLG=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (ID = ?)</tt>
	 *
	 *	@param img
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateById(ImgDO img) throws DataAccessException {
    	if (img == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-IMG-UPDATE-BY-ID", img);
    }

	/**
	 *  Query DB table <tt>hqyt_img</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_img</tt>
	 *
	 *	@param productId
	 *	@param imgType
	 *	@param imgFlg
	 *	@param delFlg
	 *	@return ImgDO
	 *	@throws DataAccessException
	 */	 
    public  ImgDO   queryImgByProductIdAndType(String productId, String imgType, String imgFlg, String delFlg) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("productId", productId);
        param.put("imgType", imgType);
        param.put("imgFlg", imgFlg);
        param.put("delFlg", delFlg);

	        return (ImgDO) getSqlMapClientTemplate().queryForObject("MS-IMG-QUERY-IMG-BY-PRODUCT-ID-AND-TYPE", param);
		
    }

}