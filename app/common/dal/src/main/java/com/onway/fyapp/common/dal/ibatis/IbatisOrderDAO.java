/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.OrderDAO;

import java.util.List;
import java.util.Date;
import com.onway.fyapp.common.dal.dataobject.OrderDO;
import org.springframework.dao.DataAccessException;
import java.util.HashMap;
import java.math.BigDecimal;
import  java.math.BigDecimal;

import java.util.Map;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.OrderDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_order.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisOrderDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisOrderDAO extends SqlMapClientDaoSupport implements OrderDAO {
	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param userId
	 *	@param orderId
	 *	@param childOrderId
	 *	@param productId
	 *	@param productName
	 *	@param productErpNo
	 *	@param orderStatusList
	 *	@param transferType
	 *	@param teamId
	 *	@param teamName
	 *	@param teamErpNo
	 *	@param userCell
	 *	@param orderCell
	 *	@param payWay
	 *	@param startDate
	 *	@param endDate
	 *	@param childOrderIdList
	 *	@param rankType
	 *	@param errFlg
	 *	@param subOrderStatus
	 *	@param isCashier
	 *	@param cashierUser
	 *	@param voucher
	 *	@param barCode
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   selectByQuery(String userId, String orderId, String childOrderId, String productId, String productName, String productErpNo, List orderStatusList, String transferType, String teamId, String teamName, String teamErpNo, String userCell, String orderCell, String payWay, Date startDate, Date endDate, List childOrderIdList, String rankType, String errFlg, List subOrderStatus, String isCashier, String cashierUser, String voucher, String barCode, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("orderId", orderId);
        param.put("childOrderId", childOrderId);
        param.put("productId", productId);
        param.put("productName", productName);
        param.put("productErpNo", productErpNo);
        param.put("orderStatusList", orderStatusList);
        param.put("transferType", transferType);
        param.put("teamId", teamId);
        param.put("teamName", teamName);
        param.put("teamErpNo", teamErpNo);
        param.put("userCell", userCell);
        param.put("orderCell", orderCell);
        param.put("payWay", payWay);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("childOrderIdList", childOrderIdList);
        param.put("rankType", rankType);
        param.put("errFlg", errFlg);
        param.put("subOrderStatus", subOrderStatus);
        param.put("isCashier", isCashier);
        param.put("cashierUser", cashierUser);
        param.put("voucher", voucher);
        param.put("barCode", barCode);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-SELECT-BY-QUERY", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from hqyt_order</tt>
	 *
	 *	@param userId
	 *	@param orderId
	 *	@param childOrderId
	 *	@param productId
	 *	@param productName
	 *	@param productErpNo
	 *	@param orderStatusList
	 *	@param transferType
	 *	@param teamId
	 *	@param teamName
	 *	@param teamErpNo
	 *	@param userCell
	 *	@param orderCell
	 *	@param payWay
	 *	@param startDate
	 *	@param endDate
	 *	@param childOrderIdList
	 *	@param rankType
	 *	@param errFlg
	 *	@param subOrderStatus
	 *	@param isCashier
	 *	@param cashierUser
	 *	@param voucher
	 *	@param barCode
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   selectCountByQuery(String userId, String orderId, String childOrderId, String productId, String productName, String productErpNo, List orderStatusList, String transferType, String teamId, String teamName, String teamErpNo, String userCell, String orderCell, String payWay, Date startDate, Date endDate, List childOrderIdList, String rankType, String errFlg, List subOrderStatus, String isCashier, String cashierUser, String voucher, String barCode) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("orderId", orderId);
        param.put("childOrderId", childOrderId);
        param.put("productId", productId);
        param.put("productName", productName);
        param.put("productErpNo", productErpNo);
        param.put("orderStatusList", orderStatusList);
        param.put("transferType", transferType);
        param.put("teamId", teamId);
        param.put("teamName", teamName);
        param.put("teamErpNo", teamErpNo);
        param.put("userCell", userCell);
        param.put("orderCell", orderCell);
        param.put("payWay", payWay);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("childOrderIdList", childOrderIdList);
        param.put("rankType", rankType);
        param.put("errFlg", errFlg);
        param.put("subOrderStatus", subOrderStatus);
        param.put("isCashier", isCashier);
        param.put("cashierUser", cashierUser);
        param.put("voucher", voucher);
        param.put("barCode", barCode);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-ORDER-SELECT-COUNT-BY-QUERY", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order where (CHILD_ORDER_ID = ?)</tt>
	 *
	 *	@param childOrderId
	 *	@return OrderDO
	 *	@throws DataAccessException
	 */	 
    public  OrderDO   selectByChildOrderId(String childOrderId) throws DataAccessException {

 
	        return (OrderDO) getSqlMapClientTemplate().queryForObject("MS-ORDER-SELECT-BY-CHILD-ORDER-ID", childOrderId);
		
    }

	/**
	 *  Update DB table <tt>hqyt_order</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_order set CARRI_COM=?, CARRI_NO=?, ORDER_STATE='2', MODIFIER=?, SEND_DATE=CURRENT_TIMESTAMP, GMT_MODIFIED=CURRENT_TIMESTAMP where (CHILD_ORDER_ID = ?)</tt>
	 *
	 *	@param carriCom
	 *	@param carriNo
	 *	@param modifier
	 *	@param childOrderId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateWuliuAndSta(String carriCom, String carriNo, String modifier, String childOrderId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("carriCom", carriCom);
        param.put("carriNo", carriNo);
        param.put("modifier", modifier);
        param.put("childOrderId", childOrderId);

        return getSqlMapClientTemplate().update("MS-ORDER-UPDATE-WULIU-AND-STA", param);
    }

	/**
	 *  Update DB table <tt>hqyt_order</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_order set ORDER_STATE=?, MODIFIER=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (CHILD_ORDER_ID = ?)</tt>
	 *
	 *	@param orderState
	 *	@param modifier
	 *	@param childOrderId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateOrderStatByChildId(String orderState, String modifier, String childOrderId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("orderState", orderState);
        param.put("modifier", modifier);
        param.put("childOrderId", childOrderId);

        return getSqlMapClientTemplate().update("MS-ORDER-UPDATE-ORDER-STAT-BY-CHILD-ID", param);
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param dayAgo
	 *	@param oldOrderStatus
	 *	@return List<OrderDO>
	 *	@throws DataAccessException
	 */	 
    public  List<OrderDO>   queryAutoReceiveOrder(Date dayAgo, String oldOrderStatus) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("dayAgo", dayAgo);
        param.put("oldOrderStatus", oldOrderStatus);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-QUERY-AUTO-RECEIVE-ORDER", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param userId
	 *	@param orderId
	 *	@param productId
	 *	@param orderState
	 *	@param transferType
	 *	@return List<OrderDO>
	 *	@throws DataAccessException
	 */	 
    public  List<OrderDO>   selectByQueryNotMap(String userId, String orderId, String productId, String orderState, String transferType) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("orderId", orderId);
        param.put("productId", productId);
        param.put("orderState", orderState);
        param.put("transferType", transferType);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-SELECT-BY-QUERY-NOT-MAP", param);

    }

	/**
	 *  Update DB table <tt>hqyt_order</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_order set GMT_MODIFIED=CURRENT_TIMESTAMP</tt>
	 *
	 *	@param orderStatus
	 *	@param modifier
	 *	@param childOrderIdList
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateOrderStatByChildIdList(String orderStatus, String modifier, List childOrderIdList) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("orderStatus", orderStatus);
        param.put("modifier", modifier);
        param.put("childOrderIdList", childOrderIdList);

        return getSqlMapClientTemplate().update("MS-ORDER-UPDATE-ORDER-STAT-BY-CHILD-ID-LIST", param);
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param childOrderId
	 *	@param moneyStatus
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   queryForOrderReturnNotSucc(String childOrderId, String moneyStatus, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("childOrderId", childOrderId);
        param.put("moneyStatus", moneyStatus);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-QUERY-FOR-ORDER-RETURN-NOT-SUCC", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_order</tt>
	 *
	 *	@param childOrderId
	 *	@param moneyStatus
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   queryForOrderReturnNotSuccCount(String childOrderId, String moneyStatus) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("childOrderId", childOrderId);
        param.put("moneyStatus", moneyStatus);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-ORDER-QUERY-FOR-ORDER-RETURN-NOT-SUCC-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Update DB table <tt>hqyt_order</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_order set GMT_MODIFIED=CURRENT_TIMESTAMP</tt>
	 *
	 *	@param orderStatus
	 *	@param childOrderIdList
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateOrderStatusToNotSendIngByChildIdList(String orderStatus, List childOrderIdList) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("orderStatus", orderStatus);
        param.put("childOrderIdList", childOrderIdList);

        return getSqlMapClientTemplate().update("MS-ORDER-UPDATE-ORDER-STATUS-TO-NOT-SEND-ING-BY-CHILD-ID-LIST", param);
    }

	/**
	 *  Update DB table <tt>hqyt_order</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_order set DELAY_FLG=?, DELAY_TIME=CURRENT_TIMESTAMP where (CHILD_ORDER_ID = ?)</tt>
	 *
	 *	@param delayFlg
	 *	@param childOrderId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   modifyDelayFlg(String delayFlg, String childOrderId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("delayFlg", delayFlg);
        param.put("childOrderId", childOrderId);

        return getSqlMapClientTemplate().update("MS-ORDER-MODIFY-DELAY-FLG", param);
    }

	/**
	 *  Update DB table <tt>hqyt_order</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_order set PRINT_FLG=? where (CHILD_ORDER_ID = ?)</tt>
	 *
	 *	@param printFlg
	 *	@param childOrderId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   modifyPrintFlg(String printFlg, String childOrderId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("printFlg", printFlg);
        param.put("childOrderId", childOrderId);

        return getSqlMapClientTemplate().update("MS-ORDER-MODIFY-PRINT-FLG", param);
    }

	/**
	 *  Update DB table <tt>hqyt_order</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_order set CARRI_COM=?, CARRI_NO=?, MODIFIER=? where (CHILD_ORDER_ID = ?)</tt>
	 *
	 *	@param carriCom
	 *	@param carriNo
	 *	@param modifier
	 *	@param childOrderId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   modifyMailno(String carriCom, String carriNo, String modifier, String childOrderId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("carriCom", carriCom);
        param.put("carriNo", carriNo);
        param.put("modifier", modifier);
        param.put("childOrderId", childOrderId);

        return getSqlMapClientTemplate().update("MS-ORDER-MODIFY-MAILNO", param);
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param mailno
	 *	@return List<OrderDO>
	 *	@throws DataAccessException
	 */	 
    public  List<OrderDO>   queryByMailno(String mailno) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("mailno", mailno);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-QUERY-BY-MAILNO", param);

    }

	/**
	 *  Update DB table <tt>hqyt_order</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_order set ORDER_STATE=?, MODIFIER=? where (CHILD_ORDER_ID = ?)</tt>
	 *
	 *	@param orderState
	 *	@param modifier
	 *	@param childOrderId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   modifyOrderStatus(String orderState, String modifier, String childOrderId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("orderState", orderState);
        param.put("modifier", modifier);
        param.put("childOrderId", childOrderId);

        return getSqlMapClientTemplate().update("MS-ORDER-MODIFY-ORDER-STATUS", param);
    }

	/**
	 *  Update DB table <tt>hqyt_order</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_order set DEVOTE_AMOUNT=? where (CHILD_ORDER_ID = ?)</tt>
	 *
	 *	@param order
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   modifyDevoteByChildOrderId(OrderDO order) throws DataAccessException {
    	if (order == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-ORDER-MODIFY-DEVOTE-BY-CHILD-ORDER-ID", order);
    }

	/**
	 *  Update DB table <tt>hqyt_order</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_order set RECOMMEND_TYPE=?, RECOMMEND_ID=?, RECOMMEND_USER_ID=? where (CHILD_ORDER_ID = ?)</tt>
	 *
	 *	@param order
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   changeRecommendType(OrderDO order) throws DataAccessException {
    	if (order == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-ORDER-CHANGE-RECOMMEND-TYPE", order);
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param province
	 *	@param city
	 *	@param teamMsg
	 *	@param operMsg
	 *	@param ywerMsg
	 *	@param dqerMsg
	 *	@param startDateYw
	 *	@param endDateYw
	 *	@param startDateDq
	 *	@param endDateDq
	 *	@param startDateOrder
	 *	@param endDateOrder
	 *	@param proMsg
	 *	@param userMsg
	 *	@param ywCheckStatus
	 *	@param dqCheckStatus
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   queryAllSaleCheckList(String province, String city, String teamMsg, String operMsg, String ywerMsg, String dqerMsg, Date startDateYw, Date endDateYw, Date startDateDq, Date endDateDq, Date startDateOrder, Date endDateOrder, String proMsg, String userMsg, String ywCheckStatus, String dqCheckStatus, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("province", province);
        param.put("city", city);
        param.put("teamMsg", teamMsg);
        param.put("operMsg", operMsg);
        param.put("ywerMsg", ywerMsg);
        param.put("dqerMsg", dqerMsg);
        param.put("startDateYw", startDateYw);
        param.put("endDateYw", endDateYw);
        param.put("startDateDq", startDateDq);
        param.put("endDateDq", endDateDq);
        param.put("startDateOrder", startDateOrder);
        param.put("endDateOrder", endDateOrder);
        param.put("proMsg", proMsg);
        param.put("userMsg", userMsg);
        param.put("ywCheckStatus", ywCheckStatus);
        param.put("dqCheckStatus", dqCheckStatus);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-QUERY-ALL-SALE-CHECK-LIST", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_order</tt>
	 *
	 *	@param province
	 *	@param city
	 *	@param teamMsg
	 *	@param operMsg
	 *	@param ywerMsg
	 *	@param dqerMsg
	 *	@param startDateYw
	 *	@param endDateYw
	 *	@param startDateDq
	 *	@param endDateDq
	 *	@param startDateOrder
	 *	@param endDateOrder
	 *	@param proMsg
	 *	@param userMsg
	 *	@param ywCheckStatus
	 *	@param dqCheckStatus
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   queryAllSaleCheckListCount(String province, String city, String teamMsg, String operMsg, String ywerMsg, String dqerMsg, Date startDateYw, Date endDateYw, Date startDateDq, Date endDateDq, Date startDateOrder, Date endDateOrder, String proMsg, String userMsg, String ywCheckStatus, String dqCheckStatus) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("province", province);
        param.put("city", city);
        param.put("teamMsg", teamMsg);
        param.put("operMsg", operMsg);
        param.put("ywerMsg", ywerMsg);
        param.put("dqerMsg", dqerMsg);
        param.put("startDateYw", startDateYw);
        param.put("endDateYw", endDateYw);
        param.put("startDateDq", startDateDq);
        param.put("endDateDq", endDateDq);
        param.put("startDateOrder", startDateOrder);
        param.put("endDateOrder", endDateOrder);
        param.put("proMsg", proMsg);
        param.put("userMsg", userMsg);
        param.put("ywCheckStatus", ywCheckStatus);
        param.put("dqCheckStatus", dqCheckStatus);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-ORDER-QUERY-ALL-SALE-CHECK-LIST-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param province
	 *	@param city
	 *	@param teamMsg
	 *	@param discountName
	 *	@param discountId
	 *	@param startDate
	 *	@param endDate
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   queryAllDiscountUseList(List province, List city, String teamMsg, String discountName, String discountId, Date startDate, Date endDate, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("province", province);
        param.put("city", city);
        param.put("teamMsg", teamMsg);
        param.put("discountName", discountName);
        param.put("discountId", discountId);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-QUERY-ALL-DISCOUNT-USE-LIST", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_order</tt>
	 *
	 *	@param province
	 *	@param city
	 *	@param teamMsg
	 *	@param discountName
	 *	@param discountId
	 *	@param startDate
	 *	@param endDate
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   queryAllDiscountUseListCount(List province, List city, String teamMsg, String discountName, String discountId, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("province", province);
        param.put("city", city);
        param.put("teamMsg", teamMsg);
        param.put("discountName", discountName);
        param.put("discountId", discountId);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-ORDER-QUERY-ALL-DISCOUNT-USE-LIST-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param province
	 *	@param city
	 *	@param teamMsg
	 *	@param discountName
	 *	@param discountId
	 *	@param startDate
	 *	@param endDate
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public  Map<String,Object>  sumAllDiscountUseList(List province, List city, String teamMsg, String discountName, String discountId, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("province", province);
        param.put("city", city);
        param.put("teamMsg", teamMsg);
        param.put("discountName", discountName);
        param.put("discountId", discountId);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

	        return (HashMap) getSqlMapClientTemplate().queryForObject("MS-ORDER-SUM-ALL-DISCOUNT-USE-LIST", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param orderStatus
	 *	@param startDate
	 *	@param endDate
	 *	@param startDates
	 *	@param endDates
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public  Map<String,Object>  calculateSalesAmount(List teamIds, List orderStatus, Date startDate, Date endDate, Date startDates, Date endDates) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("orderStatus", orderStatus);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("startDates", startDates);
        param.put("endDates", endDates);

	        return (HashMap) getSqlMapClientTemplate().queryForObject("MS-ORDER-CALCULATE-SALES-AMOUNT", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param proMsg
	 *	@param province
	 *	@param city
	 *	@param childCategoryS
	 *	@param teamId
	 *	@param teamLevel
	 *	@param orderStatus
	 *	@param startDate
	 *	@param endDate
	 *	@param startDates
	 *	@param endDates
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public  Map<String,Object>  calculateSalesAmountCategory(String proMsg, String province, String city, List childCategoryS, List teamId, List teamLevel, List orderStatus, Date startDate, Date endDate, Date startDates, Date endDates) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("proMsg", proMsg);
        param.put("province", province);
        param.put("city", city);
        param.put("childCategoryS", childCategoryS);
        param.put("teamId", teamId);
        param.put("teamLevel", teamLevel);
        param.put("orderStatus", orderStatus);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("startDates", startDates);
        param.put("endDates", endDates);

	        return (HashMap) getSqlMapClientTemplate().queryForObject("MS-ORDER-CALCULATE-SALES-AMOUNT-CATEGORY", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param orderStatus
	 *	@param startDate
	 *	@param endDate
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public  Map<String,Object>  calculateSalesStoreDiscountRate(List teamIds, List orderStatus, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("orderStatus", orderStatus);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

	        return (HashMap) getSqlMapClientTemplate().queryForObject("MS-ORDER-CALCULATE-SALES-STORE-DISCOUNT-RATE", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param orderStatus
	 *	@param startDate
	 *	@param endDate
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   calculateSalesStoreDiscountRateForOrderId(List teamIds, List orderStatus, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("orderStatus", orderStatus);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-CALCULATE-SALES-STORE-DISCOUNT-RATE-FOR-ORDER-ID", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param proMsg
	 *	@param teamIds
	 *	@param orderStatus
	 *	@param childCategoryS
	 *	@param startDate
	 *	@param endDate
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public  Map<String,Object>  calculateSalesCategoryDiscountRate(String proMsg, List teamIds, List orderStatus, List childCategoryS, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("proMsg", proMsg);
        param.put("teamIds", teamIds);
        param.put("orderStatus", orderStatus);
        param.put("childCategoryS", childCategoryS);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

	        return (HashMap) getSqlMapClientTemplate().queryForObject("MS-ORDER-CALCULATE-SALES-CATEGORY-DISCOUNT-RATE", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param proMsg
	 *	@param teamIds
	 *	@param orderStatus
	 *	@param childCategoryS
	 *	@param startDate
	 *	@param endDate
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   calculateSalesCategoryDiscountRateForOrderId(String proMsg, List teamIds, List orderStatus, List childCategoryS, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("proMsg", proMsg);
        param.put("teamIds", teamIds);
        param.put("orderStatus", orderStatus);
        param.put("childCategoryS", childCategoryS);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-CALCULATE-SALES-CATEGORY-DISCOUNT-RATE-FOR-ORDER-ID", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param province
	 *	@param city
	 *	@param userType
	 *	@param someMsg
	 *	@param reerMsg
	 *	@param teamIds
	 *	@param proMsg
	 *	@param childCategoryS
	 *	@param orderStatus
	 *	@param startDate
	 *	@param endDate
	 *	@param isTeamUser
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   calculateSalesCategoryForUserOrAcc(List province, List city, String userType, String someMsg, String reerMsg, List teamIds, String proMsg, List childCategoryS, List orderStatus, Date startDate, Date endDate, String isTeamUser, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("province", province);
        param.put("city", city);
        param.put("userType", userType);
        param.put("someMsg", someMsg);
        param.put("reerMsg", reerMsg);
        param.put("teamIds", teamIds);
        param.put("proMsg", proMsg);
        param.put("childCategoryS", childCategoryS);
        param.put("orderStatus", orderStatus);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("isTeamUser", isTeamUser);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-CALCULATE-SALES-CATEGORY-FOR-USER-OR-ACC", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_order</tt>
	 *
	 *	@param province
	 *	@param city
	 *	@param userType
	 *	@param someMsg
	 *	@param reerMsg
	 *	@param teamIds
	 *	@param proMsg
	 *	@param childCategoryS
	 *	@param orderStatus
	 *	@param startDate
	 *	@param endDate
	 *	@param isTeamUser
	 *	@return List<Integer>
	 *	@throws DataAccessException
	 */	 
    public  List<Integer>   calculateSalesCategoryForUserOrAccCount(List province, List city, String userType, String someMsg, String reerMsg, List teamIds, String proMsg, List childCategoryS, List orderStatus, Date startDate, Date endDate, String isTeamUser) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("province", province);
        param.put("city", city);
        param.put("userType", userType);
        param.put("someMsg", someMsg);
        param.put("reerMsg", reerMsg);
        param.put("teamIds", teamIds);
        param.put("proMsg", proMsg);
        param.put("childCategoryS", childCategoryS);
        param.put("orderStatus", orderStatus);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("isTeamUser", isTeamUser);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-CALCULATE-SALES-CATEGORY-FOR-USER-OR-ACC-COUNT", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param userMsg
	 *	@param proMsg
	 *	@param teamIds
	 *	@param orderStatus
	 *	@param startDate
	 *	@param endDate
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public  Map<String,Object>  calculateSalesForUsersOrStores(String userMsg, String proMsg, List teamIds, List orderStatus, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userMsg", userMsg);
        param.put("proMsg", proMsg);
        param.put("teamIds", teamIds);
        param.put("orderStatus", orderStatus);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

	        return (HashMap) getSqlMapClientTemplate().queryForObject("MS-ORDER-CALCULATE-SALES-FOR-USERS-OR-STORES", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param buyMsg
	 *	@param ageGroup
	 *	@param proMsg
	 *	@param province
	 *	@param city
	 *	@param startTime
	 *	@param endTime
	 *	@param childCategoryS
	 *	@param orderStatus
	 *	@param specialyFlg
	 *	@param specialyUid
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   calculateSalesCategoryForUserMsg(String buyMsg, String ageGroup, String proMsg, String province, String city, Date startTime, Date endTime, List childCategoryS, List orderStatus, String specialyFlg, String specialyUid, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("buyMsg", buyMsg);
        param.put("ageGroup", ageGroup);
        param.put("proMsg", proMsg);
        param.put("province", province);
        param.put("city", city);
        param.put("startTime", startTime);
        param.put("endTime", endTime);
        param.put("childCategoryS", childCategoryS);
        param.put("orderStatus", orderStatus);
        param.put("specialyFlg", specialyFlg);
        param.put("specialyUid", specialyUid);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-CALCULATE-SALES-CATEGORY-FOR-USER-MSG", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param buyMsg
	 *	@param ageGroup
	 *	@param proMsg
	 *	@param province
	 *	@param city
	 *	@param startTime
	 *	@param endTime
	 *	@param childCategoryS
	 *	@param orderStatus
	 *	@param specialyFlg
	 *	@param specialyUid
	 *	@return Integer
	 *	@throws DataAccessException
	 */	 
    public  Integer   calculateSalesCategoryForUserMsgCount(String buyMsg, String ageGroup, String proMsg, String province, String city, Date startTime, Date endTime, List childCategoryS, List orderStatus, String specialyFlg, String specialyUid) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("buyMsg", buyMsg);
        param.put("ageGroup", ageGroup);
        param.put("proMsg", proMsg);
        param.put("province", province);
        param.put("city", city);
        param.put("startTime", startTime);
        param.put("endTime", endTime);
        param.put("childCategoryS", childCategoryS);
        param.put("orderStatus", orderStatus);
        param.put("specialyFlg", specialyFlg);
        param.put("specialyUid", specialyUid);

	        return (Integer) getSqlMapClientTemplate().queryForObject("MS-ORDER-CALCULATE-SALES-CATEGORY-FOR-USER-MSG-COUNT", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param userMsg
	 *	@param reMsg
	 *	@param startTime
	 *	@param endTime
	 *	@param status
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   userSaleMoney(List teamIds, String userMsg, String reMsg, Date startTime, Date endTime, List status, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("userMsg", userMsg);
        param.put("reMsg", reMsg);
        param.put("startTime", startTime);
        param.put("endTime", endTime);
        param.put("status", status);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-USER-SALE-MONEY", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param userMsg
	 *	@param reMsg
	 *	@param startTime
	 *	@param endTime
	 *	@param status
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   userSaleMoneyCount(List teamIds, String userMsg, String reMsg, Date startTime, Date endTime, List status) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("userMsg", userMsg);
        param.put("reMsg", reMsg);
        param.put("startTime", startTime);
        param.put("endTime", endTime);
        param.put("status", status);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-ORDER-USER-SALE-MONEY-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param cashierUserMsg
	 *	@param proMsg
	 *	@param buyMsg
	 *	@param orderNo
	 *	@param orderId
	 *	@param specialyFlg
	 *	@param specialyUid
	 *	@param startTime
	 *	@param endTime
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   queryAllCashierOrderList(List teamIds, String cashierUserMsg, String proMsg, String buyMsg, String orderNo, String orderId, String specialyFlg, String specialyUid, Date startTime, Date endTime, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("cashierUserMsg", cashierUserMsg);
        param.put("proMsg", proMsg);
        param.put("buyMsg", buyMsg);
        param.put("orderNo", orderNo);
        param.put("orderId", orderId);
        param.put("specialyFlg", specialyFlg);
        param.put("specialyUid", specialyUid);
        param.put("startTime", startTime);
        param.put("endTime", endTime);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-QUERY-ALL-CASHIER-ORDER-LIST", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param cashierUserMsg
	 *	@param proMsg
	 *	@param buyMsg
	 *	@param orderNo
	 *	@param orderId
	 *	@param specialyFlg
	 *	@param specialyUid
	 *	@param startTime
	 *	@param endTime
	 *	@return Integer
	 *	@throws DataAccessException
	 */	 
    public  Integer   queryAllCashierOrderListCount(List teamIds, String cashierUserMsg, String proMsg, String buyMsg, String orderNo, String orderId, String specialyFlg, String specialyUid, Date startTime, Date endTime) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("cashierUserMsg", cashierUserMsg);
        param.put("proMsg", proMsg);
        param.put("buyMsg", buyMsg);
        param.put("orderNo", orderNo);
        param.put("orderId", orderId);
        param.put("specialyFlg", specialyFlg);
        param.put("specialyUid", specialyUid);
        param.put("startTime", startTime);
        param.put("endTime", endTime);

	        return (Integer) getSqlMapClientTemplate().queryForObject("MS-ORDER-QUERY-ALL-CASHIER-ORDER-LIST-COUNT", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param startTime
	 *	@param endTime
	 *	@param status
	 *	@return BigDecimal
	 *	@throws DataAccessException
	 */	 
    public  BigDecimal   sumAllMoney(List teamIds, Date startTime, Date endTime, List status) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("startTime", startTime);
        param.put("endTime", endTime);
        param.put("status", status);

	        return (BigDecimal) getSqlMapClientTemplate().queryForObject("MS-ORDER-SUM-ALL-MONEY", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param userIds
	 *	@param startTime
	 *	@param endTime
	 *	@param status
	 *	@return BigDecimal
	 *	@throws DataAccessException
	 */	 
    public  BigDecimal   sumAllMoneyTeam(List userIds, Date startTime, Date endTime, List status) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userIds", userIds);
        param.put("startTime", startTime);
        param.put("endTime", endTime);
        param.put("status", status);

	        return (BigDecimal) getSqlMapClientTemplate().queryForObject("MS-ORDER-SUM-ALL-MONEY-TEAM", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param province
	 *	@param city
	 *	@param teamMsg
	 *	@param discountId
	 *	@param startDate
	 *	@param endDate
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   queryAllDiscountUseListS(List province, List city, String teamMsg, String discountId, Date startDate, Date endDate, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("province", province);
        param.put("city", city);
        param.put("teamMsg", teamMsg);
        param.put("discountId", discountId);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-QUERY-ALL-DISCOUNT-USE-LIST-S", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_order</tt>
	 *
	 *	@param province
	 *	@param city
	 *	@param teamMsg
	 *	@param discountId
	 *	@param startDate
	 *	@param endDate
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   queryAllDiscountUseListCountS(List province, List city, String teamMsg, String discountId, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("province", province);
        param.put("city", city);
        param.put("teamMsg", teamMsg);
        param.put("discountId", discountId);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-ORDER-QUERY-ALL-DISCOUNT-USE-LIST-COUNT-S", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param province
	 *	@param city
	 *	@param teamMsg
	 *	@param discountId
	 *	@param startDate
	 *	@param endDate
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public  Map<String,Object>  sumAllDiscountUseListS(List province, List city, String teamMsg, String discountId, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("province", province);
        param.put("city", city);
        param.put("teamMsg", teamMsg);
        param.put("discountId", discountId);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

	        return (HashMap) getSqlMapClientTemplate().queryForObject("MS-ORDER-SUM-ALL-DISCOUNT-USE-LIST-S", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param cashierUserMsg
	 *	@param proMsg
	 *	@param buyMsg
	 *	@param orderNo
	 *	@param orderId
	 *	@param specialyFlg
	 *	@param specialyUid
	 *	@param startTime
	 *	@param endTime
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public  Map<String,Object>  queryAllCashierOrderListSum(List teamIds, String cashierUserMsg, String proMsg, String buyMsg, String orderNo, String orderId, String specialyFlg, String specialyUid, Date startTime, Date endTime) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("cashierUserMsg", cashierUserMsg);
        param.put("proMsg", proMsg);
        param.put("buyMsg", buyMsg);
        param.put("orderNo", orderNo);
        param.put("orderId", orderId);
        param.put("specialyFlg", specialyFlg);
        param.put("specialyUid", specialyUid);
        param.put("startTime", startTime);
        param.put("endTime", endTime);

	        return (HashMap) getSqlMapClientTemplate().queryForObject("MS-ORDER-QUERY-ALL-CASHIER-ORDER-LIST-SUM", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param cashierUserMsg
	 *	@param proMsg
	 *	@param buyMsg
	 *	@param orderNo
	 *	@param orderId
	 *	@param specialyFlg
	 *	@param specialyUid
	 *	@param startTime
	 *	@param endTime
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 
    public  List<String>   queryAllCashierOrderListIds(List teamIds, String cashierUserMsg, String proMsg, String buyMsg, String orderNo, String orderId, String specialyFlg, String specialyUid, Date startTime, Date endTime) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("cashierUserMsg", cashierUserMsg);
        param.put("proMsg", proMsg);
        param.put("buyMsg", buyMsg);
        param.put("orderNo", orderNo);
        param.put("orderId", orderId);
        param.put("specialyFlg", specialyFlg);
        param.put("specialyUid", specialyUid);
        param.put("startTime", startTime);
        param.put("endTime", endTime);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-QUERY-ALL-CASHIER-ORDER-LIST-IDS", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param province
	 *	@param city
	 *	@param userType
	 *	@param someMsg
	 *	@param reerMsg
	 *	@param teamIds
	 *	@param proMsg
	 *	@param childCategoryS
	 *	@param orderStatus
	 *	@param startDate
	 *	@param endDate
	 *	@param isTeamUser
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public  Map<String,Object>  calculateSalesCategoryForUserOrAccSum(List province, List city, String userType, String someMsg, String reerMsg, List teamIds, String proMsg, List childCategoryS, List orderStatus, Date startDate, Date endDate, String isTeamUser) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("province", province);
        param.put("city", city);
        param.put("userType", userType);
        param.put("someMsg", someMsg);
        param.put("reerMsg", reerMsg);
        param.put("teamIds", teamIds);
        param.put("proMsg", proMsg);
        param.put("childCategoryS", childCategoryS);
        param.put("orderStatus", orderStatus);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("isTeamUser", isTeamUser);

	        return (HashMap) getSqlMapClientTemplate().queryForObject("MS-ORDER-CALCULATE-SALES-CATEGORY-FOR-USER-OR-ACC-SUM", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param buyMsg
	 *	@param ageGroup
	 *	@param proMsg
	 *	@param province
	 *	@param city
	 *	@param startTime
	 *	@param endTime
	 *	@param childCategoryS
	 *	@param orderStatus
	 *	@param specialyFlg
	 *	@param specialyUid
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public  Map<String,Object>  calculateSalesCategoryForUserMsgSum(String buyMsg, String ageGroup, String proMsg, String province, String city, Date startTime, Date endTime, List childCategoryS, List orderStatus, String specialyFlg, String specialyUid) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("buyMsg", buyMsg);
        param.put("ageGroup", ageGroup);
        param.put("proMsg", proMsg);
        param.put("province", province);
        param.put("city", city);
        param.put("startTime", startTime);
        param.put("endTime", endTime);
        param.put("childCategoryS", childCategoryS);
        param.put("orderStatus", orderStatus);
        param.put("specialyFlg", specialyFlg);
        param.put("specialyUid", specialyUid);

	        return (HashMap) getSqlMapClientTemplate().queryForObject("MS-ORDER-CALCULATE-SALES-CATEGORY-FOR-USER-MSG-SUM", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param buyMsg
	 *	@param ageGroup
	 *	@param proMsg
	 *	@param province
	 *	@param city
	 *	@param startTime
	 *	@param endTime
	 *	@param childCategoryS
	 *	@param orderStatus
	 *	@param specialyFlg
	 *	@param specialyUid
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 
    public  List<String>   calculateSalesCategoryForUserMsgUserIds(String buyMsg, String ageGroup, String proMsg, String province, String city, Date startTime, Date endTime, List childCategoryS, List orderStatus, String specialyFlg, String specialyUid) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("buyMsg", buyMsg);
        param.put("ageGroup", ageGroup);
        param.put("proMsg", proMsg);
        param.put("province", province);
        param.put("city", city);
        param.put("startTime", startTime);
        param.put("endTime", endTime);
        param.put("childCategoryS", childCategoryS);
        param.put("orderStatus", orderStatus);
        param.put("specialyFlg", specialyFlg);
        param.put("specialyUid", specialyUid);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-CALCULATE-SALES-CATEGORY-FOR-USER-MSG-USER-IDS", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_order</tt>
	 *
	 *	@param userIds
	 *	@return Integer
	 *	@throws DataAccessException
	 */	 
    public  Integer   queryMyVoucherSumCount(List userIds) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userIds", userIds);

	        return (Integer) getSqlMapClientTemplate().queryForObject("MS-ORDER-QUERY-MY-VOUCHER-SUM-COUNT", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param reMsg
	 *	@param startTime
	 *	@param endTime
	 *	@param status
	 *	@return BigDecimal
	 *	@throws DataAccessException
	 */	 
    public  BigDecimal   recommendSaleMoneySum(List teamIds, String reMsg, Date startTime, Date endTime, List status) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("reMsg", reMsg);
        param.put("startTime", startTime);
        param.put("endTime", endTime);
        param.put("status", status);

	        return (BigDecimal) getSqlMapClientTemplate().queryForObject("MS-ORDER-RECOMMEND-SALE-MONEY-SUM", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param userMsg
	 *	@param reMsg
	 *	@param startTime
	 *	@param endTime
	 *	@param status
	 *	@return BigDecimal
	 *	@throws DataAccessException
	 */	 
    public  BigDecimal   userSaleMoneySum(List teamIds, String userMsg, String reMsg, Date startTime, Date endTime, List status) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("userMsg", userMsg);
        param.put("reMsg", reMsg);
        param.put("startTime", startTime);
        param.put("endTime", endTime);
        param.put("status", status);

	        return (BigDecimal) getSqlMapClientTemplate().queryForObject("MS-ORDER-USER-SALE-MONEY-SUM", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param province
	 *	@param city
	 *	@param teamMsg
	 *	@param operMsg
	 *	@param ywerMsg
	 *	@param dqerMsg
	 *	@param startDateYw
	 *	@param endDateYw
	 *	@param startDateDq
	 *	@param endDateDq
	 *	@param startDateOrder
	 *	@param endDateOrder
	 *	@param proMsg
	 *	@param userMsg
	 *	@param ywCheckStatus
	 *	@param dqCheckStatus
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public  Map<String,Object>  queryAllSaleCheckSum(String province, String city, String teamMsg, String operMsg, String ywerMsg, String dqerMsg, Date startDateYw, Date endDateYw, Date startDateDq, Date endDateDq, Date startDateOrder, Date endDateOrder, String proMsg, String userMsg, String ywCheckStatus, String dqCheckStatus) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("province", province);
        param.put("city", city);
        param.put("teamMsg", teamMsg);
        param.put("operMsg", operMsg);
        param.put("ywerMsg", ywerMsg);
        param.put("dqerMsg", dqerMsg);
        param.put("startDateYw", startDateYw);
        param.put("endDateYw", endDateYw);
        param.put("startDateDq", startDateDq);
        param.put("endDateDq", endDateDq);
        param.put("startDateOrder", startDateOrder);
        param.put("endDateOrder", endDateOrder);
        param.put("proMsg", proMsg);
        param.put("userMsg", userMsg);
        param.put("ywCheckStatus", ywCheckStatus);
        param.put("dqCheckStatus", dqCheckStatus);

	        return (HashMap) getSqlMapClientTemplate().queryForObject("MS-ORDER-QUERY-ALL-SALE-CHECK-SUM", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_order</tt>
	 *
	 *	@param userId
	 *	@param userIds
	 *	@param childCategoryS
	 *	@param orderStatus
	 *	@return BigDecimal
	 *	@throws DataAccessException
	 */	 
    public  BigDecimal   queryOrderPriceSum(String userId, List userIds, List childCategoryS, List orderStatus) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("userIds", userIds);
        param.put("childCategoryS", childCategoryS);
        param.put("orderStatus", orderStatus);

	        return (BigDecimal) getSqlMapClientTemplate().queryForObject("MS-ORDER-QUERY-ORDER-PRICE-SUM", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_order</tt>
	 *
	 *	@param userId
	 *	@param userIds
	 *	@param childCategoryS
	 *	@return Double
	 *	@throws DataAccessException
	 */	 
    public  Double   queryOrderCountSum(String userId, List userIds, List childCategoryS) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("userIds", userIds);
        param.put("childCategoryS", childCategoryS);

	        return (Double) getSqlMapClientTemplate().queryForObject("MS-ORDER-QUERY-ORDER-COUNT-SUM", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param reMsg
	 *	@param status
	 *	@param startTime
	 *	@param endTime
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   recommendSaleMoneyForRecommendUser(List teamIds, String reMsg, List status, Date startTime, Date endTime, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("reMsg", reMsg);
        param.put("status", status);
        param.put("startTime", startTime);
        param.put("endTime", endTime);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-RECOMMEND-SALE-MONEY-FOR-RECOMMEND-USER", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param reMsg
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   recommendSaleMoneyForRecommendUserCount(List teamIds, String reMsg) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("reMsg", reMsg);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-ORDER-RECOMMEND-SALE-MONEY-FOR-RECOMMEND-USER-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param reMsg
	 *	@param status
	 *	@param startTime
	 *	@param endTime
	 *	@param unifyUserIds
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   recommendSaleMoneyForRecommendTeam(List teamIds, String reMsg, List status, Date startTime, Date endTime, List unifyUserIds, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("reMsg", reMsg);
        param.put("status", status);
        param.put("startTime", startTime);
        param.put("endTime", endTime);
        param.put("unifyUserIds", unifyUserIds);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-RECOMMEND-SALE-MONEY-FOR-RECOMMEND-TEAM", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param reMsg
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   recommendSaleMoneyForRecommendTeamCount(List teamIds, String reMsg) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("reMsg", reMsg);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-ORDER-RECOMMEND-SALE-MONEY-FOR-RECOMMEND-TEAM-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param reMsg
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 
    public  List<String>   recommendSaleMoneyForRecommendUserRList(List teamIds, String reMsg) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("reMsg", reMsg);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-RECOMMEND-SALE-MONEY-FOR-RECOMMEND-USER-R-LIST", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param reMsg
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 
    public  List<String>   recommendSaleMoneyForRecommendUserOList(List teamIds, String reMsg) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("reMsg", reMsg);

        return getSqlMapClientTemplate().queryForList("MS-ORDER-RECOMMEND-SALE-MONEY-FOR-RECOMMEND-USER-O-LIST", param);

    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param userIds
	 *	@param status
	 *	@param startTime
	 *	@param endTime
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public  Map<String,Object>  recommendSaleMoneyForRecommendUserReSum(List userIds, List status, Date startTime, Date endTime) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userIds", userIds);
        param.put("status", status);
        param.put("startTime", startTime);
        param.put("endTime", endTime);

	        return (HashMap) getSqlMapClientTemplate().queryForObject("MS-ORDER-RECOMMEND-SALE-MONEY-FOR-RECOMMEND-USER-RE-SUM", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param userIds
	 *	@param status
	 *	@param startTime
	 *	@param endTime
	 *	@return BigDecimal
	 *	@throws DataAccessException
	 */	 
    public  BigDecimal   recommendSaleMoneyForRecommendUserOuSum(List userIds, List status, Date startTime, Date endTime) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userIds", userIds);
        param.put("status", status);
        param.put("startTime", startTime);
        param.put("endTime", endTime);

	        return (BigDecimal) getSqlMapClientTemplate().queryForObject("MS-ORDER-RECOMMEND-SALE-MONEY-FOR-RECOMMEND-USER-OU-SUM", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_order</tt>
	 *
	 *	@param teamIds
	 *	@param reMsg
	 *	@param status
	 *	@param startTime
	 *	@param endTime
	 *	@param unifyUserIds
	 *	@return HashMap
	 *	@throws DataAccessException
	 */	 
    public  Map<String,Object>  recommendSaleMoneyForRecommendTeamSum(List teamIds, String reMsg, List status, Date startTime, Date endTime, List unifyUserIds) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamIds", teamIds);
        param.put("reMsg", reMsg);
        param.put("status", status);
        param.put("startTime", startTime);
        param.put("endTime", endTime);
        param.put("unifyUserIds", unifyUserIds);

	        return (HashMap) getSqlMapClientTemplate().queryForObject("MS-ORDER-RECOMMEND-SALE-MONEY-FOR-RECOMMEND-TEAM-SUM", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_order</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select SUM(REAL_ORDER_PRICE) from hqyt_order</tt>
	 *
	 *	@param orderNo
	 *	@return BigDecimal
	 *	@throws DataAccessException
	 */	 
    public  BigDecimal   sumOrderAmount(String orderNo) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("orderNo", orderNo);

	        return (BigDecimal) getSqlMapClientTemplate().queryForObject("MS-ORDER-SUM-ORDER-AMOUNT", param);
		
    }

}