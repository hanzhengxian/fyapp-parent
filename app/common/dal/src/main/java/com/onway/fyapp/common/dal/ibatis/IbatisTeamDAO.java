/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.TeamDAO;

import java.util.List;
import com.onway.fyapp.common.dal.dataobject.TeamDO;
import org.springframework.dao.DataAccessException;
import java.util.HashMap;

import java.util.Map;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.TeamDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_team.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisTeamDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisTeamDAO extends SqlMapClientDaoSupport implements TeamDAO {
	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team</tt>
	 *
	 *	@param userCell
	 *	@param nickName
	 *	@param teamErpNo
	 *	@param teamName
	 *	@param teamType
	 *	@param isTop
	 *	@param delflg
	 *	@param teamLevel
	 *	@param realName
	 *	@param teamIdFather
	 *	@param hasChooseForDiscount
	 *	@param linkTeamIds
	 *	@param teamCheckRole
	 *	@param teamCheckCell
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   selectTeam(String userCell, String nickName, String teamErpNo, String teamName, String teamType, String isTop, String delflg, String teamLevel, String realName, String teamIdFather, String hasChooseForDiscount, List linkTeamIds, String teamCheckRole, String teamCheckCell, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userCell", userCell);
        param.put("nickName", nickName);
        param.put("teamErpNo", teamErpNo);
        param.put("teamName", teamName);
        param.put("teamType", teamType);
        param.put("isTop", isTop);
        param.put("delflg", delflg);
        param.put("teamLevel", teamLevel);
        param.put("realName", realName);
        param.put("teamIdFather", teamIdFather);
        param.put("hasChooseForDiscount", hasChooseForDiscount);
        param.put("linkTeamIds", linkTeamIds);
        param.put("teamCheckRole", teamCheckRole);
        param.put("teamCheckCell", teamCheckCell);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-TEAM-SELECT-TEAM", param);

    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_team</tt>
	 *
	 *	@param userCell
	 *	@param nickName
	 *	@param teamErpNo
	 *	@param teamName
	 *	@param teamType
	 *	@param isTop
	 *	@param delflg
	 *	@param teamLevel
	 *	@param realName
	 *	@param teamIdFather
	 *	@param hasChooseForDiscount
	 *	@param linkTeamIds
	 *	@param teamCheckRole
	 *	@param teamCheckCell
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   selectTeamCount(String userCell, String nickName, String teamErpNo, String teamName, String teamType, String isTop, String delflg, String teamLevel, String realName, String teamIdFather, String hasChooseForDiscount, List linkTeamIds, String teamCheckRole, String teamCheckCell) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userCell", userCell);
        param.put("nickName", nickName);
        param.put("teamErpNo", teamErpNo);
        param.put("teamName", teamName);
        param.put("teamType", teamType);
        param.put("isTop", isTop);
        param.put("delflg", delflg);
        param.put("teamLevel", teamLevel);
        param.put("realName", realName);
        param.put("teamIdFather", teamIdFather);
        param.put("hasChooseForDiscount", hasChooseForDiscount);
        param.put("linkTeamIds", linkTeamIds);
        param.put("teamCheckRole", teamCheckRole);
        param.put("teamCheckCell", teamCheckCell);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-TEAM-SELECT-TEAM-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team</tt>
	 *
	 *	@param userId
	 *	@param nickName
	 *	@param teamId
	 *	@param cell
	 *	@param offset
	 *	@param limit
	 *	@return List<TeamDO>
	 *	@throws DataAccessException
	 */	 
    public  List<TeamDO>   selectTeamUserList(String userId, String nickName, String teamId, String cell, String offset, String limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("nickName", nickName);
        param.put("teamId", teamId);
        param.put("cell", cell);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-TEAM-SELECT-TEAM-USER-LIST", param);

    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team where (DEL_FLG = '0')</tt>
	 *
	 *	@return List<TeamDO>
	 *	@throws DataAccessException
	 */	 
    public  List<TeamDO>   selectAllTeam() throws DataAccessException {


        return getSqlMapClientTemplate().queryForList("MS-TEAM-SELECT-ALL-TEAM", null);

    }

	/**
	 *  Insert one <tt>TeamDO</tt> object to DB table <tt>hqyt_team</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into hqyt_team(TEAM_ID,TEAM_NAME,TEAM_TYPE,TOP_TEAM_ID,IS_TOP,CELL,ADDRESS,LONGITUDE,LATITUDE,FAVOURABLE_ACTIVE,DEL_FLG,ERP_NO,TEAM_LEVEL,CITY,TEAM_ALL_NAME,CHARGE_PERSON_NAME,CHARGE_PERSON_CELL,TAX_NO,BANK_NAME,BANK_NO,BUSINESS_CATEGORY,GMT_CREATE,GMT_MODIFIED,CREATER) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, ?)</tt>
	 *
	 *	@param team
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   insertteam(TeamDO team) throws DataAccessException {
    	if (team == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-TEAM-INSERTTEAM", team);

        return team.getId();
    }

	/**
	 *  Update DB table <tt>hqyt_team</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_team set TEAM_NAME=?, TEAM_TYPE=?, CELL=?, ADDRESS=?, LONGITUDE=?, TOP_TEAM_ID=?, IS_TOP=?, LATITUDE=?, FAVOURABLE_ACTIVE=?, TEAM_LEVEL=?, ERP_NO=?, CITY=?, TEAM_ALL_NAME=?, CHARGE_PERSON_NAME=?, CHARGE_PERSON_CELL=?, TAX_NO=?, BANK_NAME=?, BANK_NO=?, BUSINESS_CATEGORY=?, MODIFIER=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (TEAM_ID = ?)</tt>
	 *
	 *	@param team
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateteam(TeamDO team) throws DataAccessException {
    	if (team == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-TEAM-UPDATETEAM", team);
    }

	/**
	 *  Update DB table <tt>hqyt_team</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_team set DEL_FLG='1', MODIFIER=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (TEAM_ID = ?)</tt>
	 *
	 *	@param modifier
	 *	@param teamId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   deleteteam(String modifier, String teamId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("modifier", modifier);
        param.put("teamId", teamId);

        return getSqlMapClientTemplate().update("MS-TEAM-DELETETEAM", param);
    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team</tt>
	 *
	 *	@return List<TeamDO>
	 *	@throws DataAccessException
	 */	 
    public  List<TeamDO>   findtop() throws DataAccessException {


        return getSqlMapClientTemplate().queryForList("MS-TEAM-FINDTOP", null);

    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team where ((DEL_FLG = '0') AND (IS_TOP = '1'))</tt>
	 *
	 *	@return List<TeamDO>
	 *	@throws DataAccessException
	 */	 
    public  List<TeamDO>   selectTopTeam() throws DataAccessException {


        return getSqlMapClientTemplate().queryForList("MS-TEAM-SELECT-TOP-TEAM", null);

    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team where (TEAM_ID = ?)</tt>
	 *
	 *	@param teamId
	 *	@return TeamDO
	 *	@throws DataAccessException
	 */	 
    public  TeamDO   selectByTeamId(String teamId) throws DataAccessException {

 
	        return (TeamDO) getSqlMapClientTemplate().queryForObject("MS-TEAM-SELECT-BY-TEAM-ID", teamId);
		
    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from hqyt_team</tt>
	 *
	 *	@param cell
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   checktel(String cell) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("cell", cell);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-TEAM-CHECKTEL", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team where (CELL = ?)</tt>
	 *
	 *	@param cell
	 *	@return TeamDO
	 *	@throws DataAccessException
	 */	 
    public  TeamDO   selectTeamByCell(String cell) throws DataAccessException {

 
	        return (TeamDO) getSqlMapClientTemplate().queryForObject("MS-TEAM-SELECT-TEAM-BY-CELL", cell);
		
    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from hqyt_team where (TOP_TEAM_ID = ?)</tt>
	 *
	 *	@param topTeamId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   selectTeamByTopId(String topTeamId) throws DataAccessException {

 
	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-TEAM-SELECT-TEAM-BY-TOP-ID", topTeamId);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team where (ERP_NO = ?)</tt>
	 *
	 *	@param erpNo
	 *	@return TeamDO
	 *	@throws DataAccessException
	 */	 
    public  TeamDO   selectTeamByErpNo(String erpNo) throws DataAccessException {

 
	        return (TeamDO) getSqlMapClientTemplate().queryForObject("MS-TEAM-SELECT-TEAM-BY-ERP-NO", erpNo);
		
    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team</tt>
	 *
	 *	@param teamType
	 *	@param startRow
	 *	@param pageSize
	 *	@return List<TeamDO>
	 *	@throws DataAccessException
	 */	 
    public  List<TeamDO>   queryAllTeam(String teamType, Integer startRow, Integer pageSize) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamType", teamType);
        param.put("startRow", startRow);
        param.put("pageSize", pageSize);

        return getSqlMapClientTemplate().queryForList("MS-TEAM-QUERY-ALL-TEAM", param);

    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_team</tt>
	 *
	 *	@param teamType
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   queryAllTeamCount(String teamType) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamType", teamType);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-TEAM-QUERY-ALL-TEAM-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Update DB table <tt>hqyt_team</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_team set TEAM_LEVEL=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (TEAM_ID = ?)</tt>
	 *
	 *	@param teamLevel
	 *	@param teamId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateTeamLevel(int teamLevel, String teamId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamLevel", new Integer(teamLevel));
        param.put("teamId", teamId);

        return getSqlMapClientTemplate().update("MS-TEAM-UPDATE-TEAM-LEVEL", param);
    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team</tt>
	 *
	 *	@param topTeamId
	 *	@return List<TeamDO>
	 *	@throws DataAccessException
	 */	 
    public  List<TeamDO>   queryAllTeamForTop(String topTeamId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("topTeamId", topTeamId);

        return getSqlMapClientTemplate().queryForList("MS-TEAM-QUERY-ALL-TEAM-FOR-TOP", param);

    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select TEAM_ID from hqyt_team</tt>
	 *
	 *	@param teamName
	 *	@param teamErpNo
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 
    public  List<String>   queryFoTeamIdArray(String teamName, String teamErpNo) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamName", teamName);
        param.put("teamErpNo", teamErpNo);

        return getSqlMapClientTemplate().queryForList("MS-TEAM-QUERY-FO-TEAM-ID-ARRAY", param);

    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team</tt>
	 *
	 *	@param userCell
	 *	@param nickName
	 *	@param teamErpNo
	 *	@param teamName
	 *	@param teamType
	 *	@param isTop
	 *	@param delflg
	 *	@param teamLevel
	 *	@param realName
	 *	@param teamIdFather
	 *	@param teamIdArray
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   selectTeamMix(String userCell, String nickName, String teamErpNo, String teamName, String teamType, String isTop, String delflg, String teamLevel, String realName, String teamIdFather, String teamIdArray, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userCell", userCell);
        param.put("nickName", nickName);
        param.put("teamErpNo", teamErpNo);
        param.put("teamName", teamName);
        param.put("teamType", teamType);
        param.put("isTop", isTop);
        param.put("delflg", delflg);
        param.put("teamLevel", teamLevel);
        param.put("realName", realName);
        param.put("teamIdFather", teamIdFather);
        param.put("teamIdArray", teamIdArray);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-TEAM-SELECT-TEAM-MIX", param);

    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_team</tt>
	 *
	 *	@param userCell
	 *	@param nickName
	 *	@param teamErpNo
	 *	@param teamName
	 *	@param teamType
	 *	@param isTop
	 *	@param delflg
	 *	@param teamLevel
	 *	@param realName
	 *	@param teamIdFather
	 *	@param teamIdArray
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   selectTeamMixCount(String userCell, String nickName, String teamErpNo, String teamName, String teamType, String isTop, String delflg, String teamLevel, String realName, String teamIdFather, String teamIdArray) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userCell", userCell);
        param.put("nickName", nickName);
        param.put("teamErpNo", teamErpNo);
        param.put("teamName", teamName);
        param.put("teamType", teamType);
        param.put("isTop", isTop);
        param.put("delflg", delflg);
        param.put("teamLevel", teamLevel);
        param.put("realName", realName);
        param.put("teamIdFather", teamIdFather);
        param.put("teamIdArray", teamIdArray);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-TEAM-SELECT-TEAM-MIX-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Update DB table <tt>hqyt_team</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_team set DEL_FLG='0', MODIFIER=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (TEAM_ID = ?)</tt>
	 *
	 *	@param modifier
	 *	@param teamId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   resumTeam(String modifier, String teamId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("modifier", modifier);
        param.put("teamId", teamId);

        return getSqlMapClientTemplate().update("MS-TEAM-RESUM-TEAM", param);
    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from hqyt_team where ((TOP_TEAM_ID = ?) AND (DEL_FLG = ?))</tt>
	 *
	 *	@param topTeamId
	 *	@param delFlg
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   getNotDealChildTeam(String topTeamId, String delFlg) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("topTeamId", topTeamId);
        param.put("delFlg", delFlg);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-TEAM-GET-NOT-DEAL-CHILD-TEAM", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team</tt>
	 *
	 *	@param teamId
	 *	@return TeamDO
	 *	@throws DataAccessException
	 */	 
    public  TeamDO   queryTeamByTeamId(String teamId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamId", teamId);

	        return (TeamDO) getSqlMapClientTemplate().queryForObject("MS-TEAM-QUERY-TEAM-BY-TEAM-ID", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_team</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team</tt>
	 *
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   queryAllTeamMsg(Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-TEAM-QUERY-ALL-TEAM-MSG", param);

    }

}