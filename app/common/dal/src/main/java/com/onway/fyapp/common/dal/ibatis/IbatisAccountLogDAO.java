/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.AccountLogDAO;

import com.onway.fyapp.common.dal.dataobject.AccountLogDO;
import org.springframework.dao.DataAccessException;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.util.HashMap;

import java.util.Map;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.AccountLogDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_account_log.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisAccountLogDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisAccountLogDAO extends SqlMapClientDaoSupport implements AccountLogDAO {
	/**
	 *  Insert one <tt>AccountLogDO</tt> object to DB table <tt>hqyt_account_log</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into hqyt_account_log(ACCOUNT_NO,TYPE,FLG,AMOUNT,BEFORE_BALANCE,AFTER_BALANCE,DEL_FLG,GMT_CREATE,GMT_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param accountLog
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   insert(AccountLogDO accountLog) throws DataAccessException {
    	if (accountLog == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-ACCOUNT-LOG-INSERT", accountLog);

        return accountLog.getId();
    }

	/**
	 *  Query DB table <tt>hqyt_account_log</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_account_log where (1 = 1)</tt>
	 *
	 *	@param userId
	 *	@param cell
	 *	@param nickName
	 *	@param logType
	 *	@param logFlg
	 *	@param accountNo
	 *	@param startDate
	 *	@param endDate
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   selectUserAccountList(String userId, String cell, String nickName, String logType, String logFlg, String accountNo, Date startDate, Date endDate, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("cell", cell);
        param.put("nickName", nickName);
        param.put("logType", logType);
        param.put("logFlg", logFlg);
        param.put("accountNo", accountNo);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-ACCOUNT-LOG-SELECT-USER-ACCOUNT-LIST", param);

    }

	/**
	 *  Query DB table <tt>hqyt_account_log</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_account_log</tt>
	 *
	 *	@param userId
	 *	@param cell
	 *	@param nickName
	 *	@param logType
	 *	@param logFlg
	 *	@param accountNo
	 *	@param startDate
	 *	@param endDate
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   selectUserAccountListCount(String userId, String cell, String nickName, String logType, String logFlg, String accountNo, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("cell", cell);
        param.put("nickName", nickName);
        param.put("logType", logType);
        param.put("logFlg", logFlg);
        param.put("accountNo", accountNo);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-ACCOUNT-LOG-SELECT-USER-ACCOUNT-LIST-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_account_log</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_account_log where (1 = 1)</tt>
	 *
	 *	@param teamId
	 *	@param cell
	 *	@param teamName
	 *	@param logType
	 *	@param logFlg
	 *	@param erpNo
	 *	@param startDate
	 *	@param endDate
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   selectTeamAccountList(String teamId, String cell, String teamName, String logType, String logFlg, String erpNo, Date startDate, Date endDate, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamId", teamId);
        param.put("cell", cell);
        param.put("teamName", teamName);
        param.put("logType", logType);
        param.put("logFlg", logFlg);
        param.put("erpNo", erpNo);
        param.put("startDate", startDate);
        param.put("endDate", endDate);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-ACCOUNT-LOG-SELECT-TEAM-ACCOUNT-LIST", param);

    }

	/**
	 *  Query DB table <tt>hqyt_account_log</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_account_log</tt>
	 *
	 *	@param teamId
	 *	@param cell
	 *	@param teamName
	 *	@param logType
	 *	@param logFlg
	 *	@param erpNo
	 *	@param startDate
	 *	@param endDate
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   selectTeamAccountListCount(String teamId, String cell, String teamName, String logType, String logFlg, String erpNo, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamId", teamId);
        param.put("cell", cell);
        param.put("teamName", teamName);
        param.put("logType", logType);
        param.put("logFlg", logFlg);
        param.put("erpNo", erpNo);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-ACCOUNT-LOG-SELECT-TEAM-ACCOUNT-LIST-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_account_log</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_account_log</tt>
	 *
	 *	@param userId
	 *	@param accountType
	 *	@param accountLogFlg
	 *	@param startDate
	 *	@param endDate
	 *	@return BigDecimal
	 *	@throws DataAccessException
	 */	 
    public  BigDecimal   queryAllDevoteLimitDate(String userId, String accountType, String accountLogFlg, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("accountType", accountType);
        param.put("accountLogFlg", accountLogFlg);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

	        return (BigDecimal) getSqlMapClientTemplate().queryForObject("MS-ACCOUNT-LOG-QUERY-ALL-DEVOTE-LIMIT-DATE", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_account_log</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_account_log</tt>
	 *
	 *	@param accountNo
	 *	@param accountLogType
	 *	@param accountLogFlg
	 *	@param startDate
	 *	@param endDate
	 *	@return BigDecimal
	 *	@throws DataAccessException
	 */	 
    public  BigDecimal   queryAllPointLimitDate(String accountNo, String accountLogType, List accountLogFlg, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("accountNo", accountNo);
        param.put("accountLogType", accountLogType);
        param.put("accountLogFlg", accountLogFlg);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

	        return (BigDecimal) getSqlMapClientTemplate().queryForObject("MS-ACCOUNT-LOG-QUERY-ALL-POINT-LIMIT-DATE", param);
		
    }

	/**
	 *  Insert one <tt>AccountLogDO</tt> object to DB table <tt>hqyt_account_log</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into hqyt_account_log(ACCOUNT_NO,TYPE,FLG,AMOUNT,BEFORE_BALANCE,AFTER_BALANCE,USER_ID,LINK_NO,GMT_CREATE,GMT_MODIFIED) values (?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param accountLog
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   creatNewLog(AccountLogDO accountLog) throws DataAccessException {
    	if (accountLog == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-ACCOUNT-LOG-CREAT-NEW-LOG", accountLog);

        return accountLog.getId();
    }

	/**
	 *  Query DB table <tt>hqyt_account_log</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_account_log</tt>
	 *
	 *	@param userId
	 *	@param accountType
	 *	@param accountLogFlg
	 *	@param startDate
	 *	@param endDate
	 *	@return BigDecimal
	 *	@throws DataAccessException
	 */	 
    public  BigDecimal   queryAllDevoteLimitDateAdd(String userId, String accountType, List accountLogFlg, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("accountType", accountType);
        param.put("accountLogFlg", accountLogFlg);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

	        return (BigDecimal) getSqlMapClientTemplate().queryForObject("MS-ACCOUNT-LOG-QUERY-ALL-DEVOTE-LIMIT-DATE-ADD", param);
		
    }

	/**
	 *  Query DB table <tt>hqyt_account_log</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_account_log</tt>
	 *
	 *	@param userId
	 *	@param accountType
	 *	@param accountLogFlg
	 *	@param startDate
	 *	@param endDate
	 *	@return BigDecimal
	 *	@throws DataAccessException
	 */	 
    public  BigDecimal   queryAllDevoteLimitDateSub(String userId, String accountType, List accountLogFlg, Date startDate, Date endDate) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("accountType", accountType);
        param.put("accountLogFlg", accountLogFlg);
        param.put("startDate", startDate);
        param.put("endDate", endDate);

	        return (BigDecimal) getSqlMapClientTemplate().queryForObject("MS-ACCOUNT-LOG-QUERY-ALL-DEVOTE-LIMIT-DATE-SUB", param);
		
    }

}