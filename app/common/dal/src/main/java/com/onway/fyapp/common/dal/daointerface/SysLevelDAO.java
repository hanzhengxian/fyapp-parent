/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.daointerface;

import com.onway.fyapp.common.dal.dataobject.SysLevelDO;
import java.util.List;
import org.springframework.dao.DataAccessException;
import java.util.Date;
import com.onway.common.lang.Money;
import java.util.Map;

/**
 * A dao interface provides methods to access database table <tt>sys_level</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/sys_level.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: SysLevelDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public interface SysLevelDAO {
	/**
	 *  Query DB table <tt>sys_level</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from sys_level</tt>
	 *
	 *	@param level
	 *	@param type
	 *	@param startRow
	 *	@param pageSize
	 *	@return List<SysLevelDO>
	 *	@throws DataAccessException
	 */	 
    public  List<SysLevelDO>   searchAllLevel(String level, String type, Integer startRow, Integer pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>sys_level</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from sys_level</tt>
	 *
	 *	@param level
	 *	@param type
	 *	@param startRow
	 *	@param pageSize
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   searchAllLevelCount(String level, String type, Integer startRow, Integer pageSize) throws DataAccessException;

	/**
	 *  Insert one <tt>SysLevelDO</tt> object to DB table <tt>sys_level</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into sys_level(LEVEL_TYPE,MIN_AMOUNT,MAX_AMOUNT,TYPE,GMT_CREATE,GMT_MODIFIED) values (?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param sysLevel
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   newLevelInfo(SysLevelDO sysLevel) throws DataAccessException;

	/**
	 *  Update DB table <tt>sys_level</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update sys_level set MIN_AMOUNT=?, MAX_AMOUNT=?, DICOUNT_RATE=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (ID = ?)</tt>
	 *
	 *	@param sysLevel
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateLevelInfo(SysLevelDO sysLevel) throws DataAccessException;

	/**
	 *  Delete records from DB table <tt>sys_level</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from sys_level where (ID = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   deleteLevelInfo(int id) throws DataAccessException;

	/**
	 *  Query DB table <tt>sys_level</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from sys_level</tt>
	 *
	 *	@param type
	 *	@param levelType
	 *	@return SysLevelDO
	 *	@throws DataAccessException
	 */	 
    public  SysLevelDO   just(String type, String levelType) throws DataAccessException;

	/**
	 *  Query DB table <tt>sys_level</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from sys_level</tt>
	 *
	 *	@param levelType
	 *	@param type
	 *	@return SysLevelDO
	 *	@throws DataAccessException
	 */	 
    public  SysLevelDO   query(String levelType, String type) throws DataAccessException;

}