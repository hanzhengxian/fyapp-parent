/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.fyapp.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.fyapp.common.dal.daointerface.TeamCheckDAO;

import com.onway.fyapp.common.dal.dataobject.TeamCheckDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.HashMap;

import java.util.Map;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.fyapp.common.dal.daointerface.TeamCheckDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/hqyt_team_check.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisTeamCheckDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisTeamCheckDAO extends SqlMapClientDaoSupport implements TeamCheckDAO {
	/**
	 *  Insert one <tt>TeamCheckDO</tt> object to DB table <tt>hqyt_team_check</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into hqyt_team_check(TEAM_ID,TEAM_USER_ID,CHECK_LEDER,GMT_CREATE,GMT_MODIFIED) values (?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)</tt>
	 *
	 *	@param teamCheck
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   newTeamCheck(TeamCheckDO teamCheck) throws DataAccessException {
    	if (teamCheck == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-TEAM-CHECK-NEW-TEAM-CHECK", teamCheck);

        return teamCheck.getId();
    }

	/**
	 *  Query DB table <tt>hqyt_team_check</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team_check</tt>
	 *
	 *	@param teamId
	 *	@param nickName
	 *	@param cell
	 *	@param roleType
	 *	@param realName
	 *	@param offset
	 *	@param limit
	 *	@return List<Map<String,Object>>
	 *	@throws DataAccessException
	 */	 
    public  List<Map<String,Object>>   queryTeamCheckUser(String teamId, String nickName, String cell, String roleType, String realName, Integer offset, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamId", teamId);
        param.put("nickName", nickName);
        param.put("cell", cell);
        param.put("roleType", roleType);
        param.put("realName", realName);
        param.put("offset", offset);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-TEAM-CHECK-QUERY-TEAM-CHECK-USER", param);

    }

	/**
	 *  Query DB table <tt>hqyt_team_check</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select COUNT(1) from hqyt_team_check</tt>
	 *
	 *	@param teamId
	 *	@param nickName
	 *	@param cell
	 *	@param roleType
	 *	@param realName
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   queryTeamCheckUserCount(String teamId, String nickName, String cell, String roleType, String realName) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamId", teamId);
        param.put("nickName", nickName);
        param.put("cell", cell);
        param.put("roleType", roleType);
        param.put("realName", realName);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-TEAM-CHECK-QUERY-TEAM-CHECK-USER-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>hqyt_team_check</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from hqyt_team_check</tt>
	 *
	 *	@param teamId
	 *	@param userId
	 *	@param roleType
	 *	@return TeamCheckDO
	 *	@throws DataAccessException
	 */	 
    public  TeamCheckDO   queryTeamCheck(String teamId, String userId, String roleType) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamId", teamId);
        param.put("userId", userId);
        param.put("roleType", roleType);

	        return (TeamCheckDO) getSqlMapClientTemplate().queryForObject("MS-TEAM-CHECK-QUERY-TEAM-CHECK", param);
		
    }

	/**
	 *  Update DB table <tt>hqyt_team_check</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update hqyt_team_check set TEAM_USER_ID=?, GMT_MODIFIED=CURRENT_TIMESTAMP where ((TEAM_ID = ?) AND (CHECK_LEDER = ?))</tt>
	 *
	 *	@param teamCheck
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   updateTeamCheckRole(TeamCheckDO teamCheck) throws DataAccessException {
    	if (teamCheck == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-TEAM-CHECK-UPDATE-TEAM-CHECK-ROLE", teamCheck);
    }

	/**
	 *  Delete records from DB table <tt>hqyt_team_check</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from hqyt_team_check where (ID = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   delTeamCheckRole(int id) throws DataAccessException {
        Integer param = new Integer(id);

        return getSqlMapClientTemplate().delete("MS-TEAM-CHECK-DEL-TEAM-CHECK-ROLE", param);
    }

	/**
	 *  Delete records from DB table <tt>hqyt_team_check</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from hqyt_team_check where (TEAM_ID = ?)</tt>
	 *
	 *	@param teamId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public  int   cleanALlTeamLink(String teamId) throws DataAccessException {

        return getSqlMapClientTemplate().delete("MS-TEAM-CHECK-CLEAN-A-LL-TEAM-LINK", teamId);
    }

}